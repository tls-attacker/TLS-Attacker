<?xml version="1.0" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="Alert" type="alertMessage"/>

  <xs:element name="AlpnExtension" type="alpnExtensionMessage"/>

  <xs:element name="Application" type="applicationMessage"/>

  <xs:element name="CachedInfoExtension" type="cachedInfoExtensionMessage"/>

  <xs:element name="Certificate" type="certificateMessage"/>

  <xs:element name="CertificateRequest" type="certificateRequestMessage"/>

  <xs:element name="CertificateStatus" type="certificateStatusMessage"/>

  <xs:element name="CertificateStatusRequestExtension" type="certificateStatusRequestExtensionMessage"/>

  <xs:element name="CertificateStatusRequestV2Extension" type="certificateStatusRequestV2ExtensionMessage"/>

  <xs:element name="CertificateTypeExtension" type="certificateTypeExtensionMessage"/>

  <xs:element name="CertificateVerify" type="certificateVerifyMessage"/>

  <xs:element name="ChangeCipherSpec" type="changeCipherSpecMessage"/>

  <xs:element name="ClientAuthorizationExtension" type="clientAuthzExtensionMessage"/>

  <xs:element name="ClientCertificateTypeExtension" type="clientCertificateTypeExtensionMessage"/>

  <xs:element name="ClientCertificateUrlExtension" type="clientCertificateUrlExtensionMessage"/>

  <xs:element name="ClientHello" type="clientHelloMessage"/>

  <xs:element name="ConnectionIdExtension" type="connectionIdExtensionMessage"/>

  <xs:element name="CookieExtension" type="cookieExtensionMessage"/>

  <xs:element name="DHClientKeyExchange" type="dhClientKeyExchangeMessage"/>

  <xs:element name="DHEClientKeyExchange" type="dheServerKeyExchangeMessage"/>

  <xs:element name="DtlsHandshakeMessageFragment" type="dtlsHandshakeMessageFragment"/>

  <xs:element name="ECDHClientKeyExchange" type="ecdhClientKeyExchangeMessage"/>

  <xs:element name="ECDHEServerKeyExchange" type="ecdheServerKeyExchangeMessage"/>

  <xs:element name="ECPointFormat" type="ecPointFormatExtensionMessage"/>

  <xs:element name="EarlyDataExtension" type="earlyDataExtensionMessage"/>

  <xs:element name="EllipticCurves" type="ellipticCurvesExtensionMessage"/>

  <xs:element name="EmptyClientKeyExchange" type="emptyClientKeyExchangeMessage"/>

  <xs:element name="EncryptThenMacExtension" type="encryptThenMacExtensionMessage"/>

  <xs:element name="EncryptedExtensions" type="encryptedExtensionsMessage"/>

  <xs:element name="EncryptedServerNameIndicationExtension" type="encryptedServerNameIndicationExtensionMessage"/>

  <xs:element name="EndOfEarlyData" type="endOfEarlyDataMessage"/>

  <xs:element name="ExtendedMasterSecretExtension" type="extendedMasterSecretExtensionMessage"/>

  <xs:element name="ExtendedRandomExtension" type="extendedRandomExtensionMessage"/>

  <xs:element name="Finished" type="finishedMessage"/>

  <xs:element name="GOSTClientKeyExchange" type="gostClientKeyExchangeMessage"/>

  <xs:element name="GreaseExtension" type="greaseExtensionMessage"/>

  <xs:element name="Heartbeat" type="heartbeatMessage"/>

  <xs:element name="HeartbeatExtension" type="heartbeatExtensionMessage"/>

  <xs:element name="HelloRequest" type="helloRequestMessage"/>

  <xs:element name="HelloVerifyRequest" type="helloVerifyRequestMessage"/>

  <xs:element name="KeyShareExtension" type="keyShareExtensionMessage"/>

  <xs:element name="KeyUpdate" type="keyUpdateMessage"/>

  <xs:element name="MaxFragmentLengthExtension" type="maxFragmentLengthExtensionMessage"/>

  <xs:element name="NewSessionTicket" type="newSessionTicketMessage"/>

  <xs:element name="PSKKeyExchangeModesExtension" type="pskKeyExchangeModesExtensionMessage"/>

  <xs:element name="PWDClearExtension" type="pwdClearExtensionMessage"/>

  <xs:element name="PWDClientKeyExchange" type="pwdClientKeyExchangeMessage"/>

  <xs:element name="PWDProtectExtension" type="pwdProtectExtensionMessage"/>

  <xs:element name="PWDServerKeyExchange" type="pwdServerKeyExchangeMessage"/>

  <xs:element name="PaddingExtension" type="paddingExtensionMessage"/>

  <xs:element name="PasswordSaltExtension" type="passwordSaltExtensionMessage"/>

  <xs:element name="PreSharedKeyExtension" type="preSharedKeyExtensionMessage"/>

  <xs:element name="PskClientKeyExchange" type="pskClientKeyExchangeMessage"/>

  <xs:element name="PskDhClientKeyExchange" type="pskDhClientKeyExchangeMessage"/>

  <xs:element name="PskDheServerKeyExchange" type="pskDheServerKeyExchangeMessage"/>

  <xs:element name="PskEcDhClientKeyExchange" type="pskEcDhClientKeyExchangeMessage"/>

  <xs:element name="PskEcDheServerKeyExchange" type="pskEcDheServerKeyExchangeMessage"/>

  <xs:element name="PskRsaClientKeyExchange" type="pskRsaClientKeyExchangeMessage"/>

  <xs:element name="PskServerKeyExchange" type="pskServerKeyExchangeMessage"/>

  <xs:element name="RSAClientKeyExchange" type="rsaClientKeyExchangeMessage"/>

  <xs:element name="RSAServerKeyExchange" type="rsaServerKeyExchangeMessage"/>

  <xs:element name="RecordSizeLimitExtension" type="recordSizeLimitExtensionMessage"/>

  <xs:element name="RenegotiationInfoExtension" type="renegotiationInfoExtensionMessage"/>

  <xs:element name="SRPExtension" type="srpExtensionMessage"/>

  <xs:element name="SSL2ClientHello" type="ssl2ClientHelloMessage"/>

  <xs:element name="SSL2ClientMasterKey" type="ssl2ClientMasterKeyMessage"/>

  <xs:element name="SSL2ServerHello" type="ssl2ServerHelloMessage"/>

  <xs:element name="SSL2ServerVerify" type="ssl2ServerVerifyMessage"/>

  <xs:element name="ServerAuthorizationExtension" type="serverAuthzExtensionMessage"/>

  <xs:element name="ServerCertificateTypeExtension" type="serverCertificateTypeExtensionMessage"/>

  <xs:element name="ServerHello" type="serverHelloMessage"/>

  <xs:element name="ServerHelloDone" type="serverHelloDoneMessage"/>

  <xs:element name="ServerNameIndicationExtension" type="serverNameIndicationExtensionMessage"/>

  <xs:element name="SessionTicketTLSExtension" type="sessionTicketTLSExtensionMessage"/>

  <xs:element name="SignatureAlgorithmsCertExtension" type="signatureAlgorithmsCertExtensionMessage"/>

  <xs:element name="SignatureAndHashAlgorithmsExtension" type="signatureAndHashAlgorithmsExtensionMessage"/>

  <xs:element name="SignedCertificateTimestampExtension" type="signedCertificateTimestampExtensionMessage"/>

  <xs:element name="SrpClientKeyExchange" type="srpClientKeyExchangeMessage"/>

  <xs:element name="SrpServerKeyExchange" type="srpServerKeyExchangeMessage"/>

  <xs:element name="SrtpExtension" type="srtpExtensionMessage"/>

  <xs:element name="SupplementalData" type="supplementalDataMessage"/>

  <xs:element name="SupportedVersions" type="supportedVersionsExtensionMessage"/>

  <xs:element name="TokenBindingExtension" type="tokenBindingExtensionMessage"/>

  <xs:element name="TruncatedHmacExtension" type="truncatedHmacExtensionMessage"/>

  <xs:element name="TrustedCaIndicationExtension" type="trustedCaIndicationExtensionMessage"/>

  <xs:element name="UnknownExtension" type="unknownExtensionMessage"/>

  <xs:element name="UnknownHandshakeMessage" type="unknownHandshakeMessage"/>

  <xs:element name="UnknownMessage" type="unknownMessage"/>

  <xs:element name="UnknownSSL2Message" type="unknownSSL2Message"/>

  <xs:element name="accessModificationFilter" type="accessModificationFilter"/>

  <xs:element name="activateDecryptionAction" type="activateDecryptionAction"/>

  <xs:element name="activateEncryptionAction" type="activateEncryptionAction"/>

  <xs:element name="applyBufferedMessagesAction" type="applyBufferedMessagesAction"/>

  <xs:element name="asciiAction" type="asciiAction"/>

  <xs:element name="bigIntegerAddModification" type="bigIntegerAddModification"/>

  <xs:element name="bigIntegerExplicitValueModification" type="bigIntegerExplicitValueModification"/>

  <xs:element name="bigIntegerInteractiveModification" type="bigIntegerInteractiveModification"/>

  <xs:element name="bigIntegerMultiplyModification" type="bigIntegerMultiplyModification"/>

  <xs:element name="bigIntegerShiftLeftModification" type="bigIntegerShiftLeftModification"/>

  <xs:element name="bigIntegerShiftRightModification" type="bigIntegerShiftRightModification"/>

  <xs:element name="bigIntegerSubtractModification" type="bigIntegerSubtractModification"/>

  <xs:element name="bigIntegerXorModification" type="bigIntegerXorModification"/>

  <xs:element name="booleanExplicitValueModification" type="booleanExplicitValueModification"/>

  <xs:element name="booleanToggleModification" type="booleanToggleModification"/>

  <xs:element name="bufferedGenericReceiveAction" type="bufferedGenericReceiveAction"/>

  <xs:element name="bufferedSendAction" type="bufferedSendAction"/>

  <xs:element name="byteAddModification" type="byteAddModification"/>

  <xs:element name="byteArrayDeleteModification" type="byteArrayDeleteModification"/>

  <xs:element name="byteArrayDuplicateModification" type="byteArrayDuplicateModification"/>

  <xs:element name="byteArrayExplicitValueModification" type="byteArrayExplicitValueModification"/>

  <xs:element name="byteArrayInsertModification" type="byteArrayInsertModification"/>

  <xs:element name="byteArrayPayloadModification" type="byteArrayPayloadModification"/>

  <xs:element name="byteArrayShuffleModification" type="byteArrayShuffleModification"/>

  <xs:element name="byteArrayXorModification" type="byteArrayXorModification"/>

  <xs:element name="byteExplicitValueModification" type="byteExplicitValueModification"/>

  <xs:element name="byteSubtractModification" type="byteSubtractModification"/>

  <xs:element name="byteXorModification" type="byteXorModification"/>

  <xs:element name="changeCipherSuiteAction" type="changeCipherSuiteAction"/>

  <xs:element name="changeClientRandomAction" type="changeClientRandomAction"/>

  <xs:element name="changeCompressionAction" type="changeCompressionAction"/>

  <xs:element name="changeConnectionTimeoutAction" type="changeConnectionTimeoutAction"/>

  <xs:element name="changeContextValueAction" type="changeContextValueAction"/>

  <xs:element name="changeDefaultPreMasterSecretAction" type="changeDefaultPreMasterSecretAction"/>

  <xs:element name="changeMasterSecretAction" type="changeMasterSecretAction"/>

  <xs:element name="changePreMasterSecretAction" type="changePreMasterSecretAction"/>

  <xs:element name="changeProtocolVersionAction" type="changeProtocolVersionAction"/>

  <xs:element name="changeReadEpochAction" type="changeReadEpochAction"/>

  <xs:element name="changeReadSequenceNumberAction" type="changeReadSequenceNumberAction"/>

  <xs:element name="changeServerRandomAction" type="changeServerRandomAction"/>

  <xs:element name="changeWriteEpochAction" type="changeWriteEpochAction"/>

  <xs:element name="changeWriteSequenceNumberAction" type="changeWriteSequenceNumberAction"/>

  <xs:element name="clearBuffersAction" type="clearBuffersAction"/>

  <xs:element name="config" type="config"/>

  <xs:element name="copyBufferedMessagesAction" type="copyBufferedMessagesAction"/>

  <xs:element name="copyBufferedRecordsAction" type="copyBufferedRecordsAction"/>

  <xs:element name="copyBuffersAction" type="copyBuffersAction"/>

  <xs:element name="copyClientRandomAction" type="copyClientRandomAction"/>

  <xs:element name="copyPreMasterSecretAction" type="copyPreMasterSecretAction"/>

  <xs:element name="copyServerRandomAction" type="copyServerRandomAction"/>

  <xs:element name="deactivateDecryptionAction" type="deactivateDecryptionAction"/>

  <xs:element name="deactivateEncryptionAction" type="deactivateEncryptionAction"/>

  <xs:element name="deepCopyBufferedMessagesAction" type="deepCopyBufferedMessagesAction"/>

  <xs:element name="deepCopyBufferedRecordsAction" type="deepCopyBufferedRecordsAction"/>

  <xs:element name="deepCopyBuffersAction" type="deepCopyBuffersAction"/>

  <xs:element name="esniKeyDnsRequestAction" type="esniKeyDnsRequestAction"/>

  <xs:element name="findReceivedProtocolMessageAction" type="findReceivedProtocolMessageAction"/>

  <xs:element name="flushSessionCacheAction" type="flushSessionCacheAction"/>

  <xs:element name="forwardDataAction" type="forwardDataAction"/>

  <xs:element name="forwardMessagesAction" type="forwardMessagesAction"/>

  <xs:element name="forwardMessagesWithPrepareAction" type="forwardMessagesWithPrepareAction"/>

  <xs:element name="genericReceiveAction" type="genericReceiveAction"/>

  <xs:element name="genericReceiveAsciiAction" type="genericReceiveAsciiAction"/>

  <xs:element name="httpRequestMessage" type="httpRequestMessage"/>

  <xs:element name="httpResponseMessage" type="httpResponseMessage"/>

  <xs:element name="integerAddModification" type="integerAddModification"/>

  <xs:element name="integerExplicitValueModification" type="integerExplicitValueModification"/>

  <xs:element name="integerShiftLeftModification" type="integerShiftLeftModification"/>

  <xs:element name="integerShiftRightModification" type="integerShiftRightModification"/>

  <xs:element name="integerSubtractModification" type="integerSubtractModification"/>

  <xs:element name="integerXorModification" type="integerXorModification"/>

  <xs:element name="keyShareStoreEntry" type="keyShareStoreEntry"/>

  <xs:element name="longAddModification" type="longAddModification"/>

  <xs:element name="longExplicitValueModification" type="longExplicitValueModification"/>

  <xs:element name="longSubtractModification" type="longSubtractModification"/>

  <xs:element name="longXorModification" type="longXorModification"/>

  <xs:element name="modifiableBigInteger" type="modifiableBigInteger"/>

  <xs:element name="modifiableBoolean" type="modifiableBoolean"/>

  <xs:element name="modifiableByte" type="modifiableByte"/>

  <xs:element name="modifiableByteArray" type="modifiableByteArray"/>

  <xs:element name="modifiableInteger" type="modifiableInteger"/>

  <xs:element name="modifiableLong" type="modifiableLong"/>

  <xs:element name="modifiableString" type="modifiableString"/>

  <xs:element name="multiReceiveAction" type="multiReceiveAction"/>

  <xs:element name="point" type="point"/>

  <xs:element name="popAndSendAction" type="popAndSendAction"/>

  <xs:element name="popAndSendMessageAction" type="popAndSendMessageAction"/>

  <xs:element name="popAndSendRecordAction" type="popAndSendRecordAction"/>

  <xs:element name="popBufferedMessageAction" type="popBufferedMessageAction"/>

  <xs:element name="popBufferedRecordAction" type="popBufferedRecordAction"/>

  <xs:element name="popBuffersAction" type="popBuffersAction"/>

  <xs:element name="printLastHandledApplicationDataAction" type="printLastHandledApplicationDataAction"/>

  <xs:element name="printProposedExtensionsAction" type="printProposedExtensionsAction"/>

  <xs:element name="printSecretsAction" type="printSecretsAction"/>

  <xs:element name="receiveAction" type="receiveAction"/>

  <xs:element name="receiveAsciiAction" type="receiveAsciiAction"/>

  <xs:element name="receiveTillAction" type="receiveTillAction"/>

  <xs:element name="remBufferedChCiphersAction" type="remBufferedChCiphersAction"/>

  <xs:element name="remBufferedChExtensionsAction" type="remBufferedChExtensionsAction"/>

  <xs:element name="renegotiationAction" type="renegotiationAction"/>

  <xs:element name="resetConnectionAction" type="resetConnectionAction"/>

  <xs:element name="sendAction" type="sendAction"/>

  <xs:element name="sendAsciiAction" type="sendAsciiAction"/>

  <xs:element name="sendDynamicClientKeyExchangeAction" type="sendDynamicClientKeyExchangeAction"/>

  <xs:element name="sendDynamicServerCertificateAction" type="sendDynamicServerCertificateAction"/>

  <xs:element name="sendDynamicServerKeyExchangeAction" type="sendDynamicServerKeyExchangeAction"/>

  <xs:element name="sendRaccoonCkeAction" type="sendRaccoonCkeAction"/>

  <xs:element name="stringExplicitValueModification" type="stringExplicitValueModification"/>

  <xs:element name="tightReceiveAction" type="tightReceiveAction"/>

  <xs:element name="userMappingExtensionMessage" type="userMappingExtensionMessage"/>

  <xs:element name="waitAction" type="waitAction"/>

  <xs:element name="workflowTrace" type="workflowTrace"/>

  <xs:complexType name="workflowTrace">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="AliasedConnection" type="aliasedConnection"/>
        <xs:element name="InboundConnection" type="inboundConnection"/>
        <xs:element name="OutboundConnection" type="outboundConnection"/>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ActivateDecryption" type="activateDecryptionAction"/>
        <xs:element name="ActivateEncryption" type="activateEncryptionAction"/>
        <xs:element name="ApplyBufferedMessages" type="applyBufferedMessagesAction"/>
        <xs:element name="BufferedGenericReceive" type="bufferedGenericReceiveAction"/>
        <xs:element name="BufferedSend" type="bufferedSendAction"/>
        <xs:element name="ChangeCipherSuite" type="changeCipherSuiteAction"/>
        <xs:element name="ChangeClientRandom" type="changeClientRandomAction"/>
        <xs:element name="ChangeCompression" type="changeCompressionAction"/>
        <xs:element name="ChangeContextValue" type="changeContextValueAction"/>
        <xs:element name="ChangeMasterSecret" type="changeMasterSecretAction"/>
        <xs:element name="ChangePreMasterSecret" type="changePreMasterSecretAction"/>
        <xs:element name="ChangeServerRsaParameters" type="changeServerRsaParametersAction"/>
        <xs:element name="ChangeDefaultPreMasterSecret" type="changeDefaultPreMasterSecretAction"/>
        <xs:element name="ChangeProtocolVersion" type="changeProtocolVersionAction"/>
        <xs:element name="ChangeServerRandom" type="changeServerRandomAction"/>
        <xs:element name="ChangeConnectionTimeout" type="changeConnectionTimeoutAction"/>
        <xs:element name="ChangeReadEpoch" type="changeReadEpochAction"/>
        <xs:element name="ChangeReadSequenceNumber" type="changeReadSequenceNumberAction"/>
        <xs:element name="ChangeWriteEpoch" type="changeWriteEpochAction"/>
        <xs:element name="ChangeWriteSequenceNumber" type="changeWriteSequenceNumberAction"/>
        <xs:element name="ClearBuffers" type="clearBuffersAction"/>
        <xs:element name="ClearDigest" type="clearDigestAction"/>
        <xs:element name="ConnectionBound" type="connectionBoundAction"/>
        <xs:element name="CopyBufferedMessages" type="copyBufferedMessagesAction"/>
        <xs:element name="CopyBufferedRecords" type="copyBufferedRecordsAction"/>
        <xs:element name="CopyBuffers" type="copyBuffersAction"/>
        <xs:element name="CopyClientRandom" type="copyClientRandomAction"/>
        <xs:element name="CopyContextField" type="copyContextFieldAction"/>
        <xs:element name="CopyPreMasterSecret" type="copyPreMasterSecretAction"/>
        <xs:element name="CopyServerRandom" type="copyServerRandomAction"/>
        <xs:element name="DeactivateDecryption" type="deactivateDecryptionAction"/>
        <xs:element name="DeactivateEncryption" type="deactivateEncryptionAction"/>
        <xs:element name="DeepCopyBufferedMessages" type="deepCopyBufferedMessagesAction"/>
        <xs:element name="DeepCopyBufferedRecords" type="deepCopyBufferedRecordsAction"/>
        <xs:element name="DeepCopyBuffers" type="deepCopyBuffersAction"/>
        <xs:element name="EsniKeyDnsRequest" type="esniKeyDnsRequestAction"/>
        <xs:element name="FindReceivedProtocolMessage" type="findReceivedProtocolMessageAction"/>
        <xs:element name="ForwardMessages" type="forwardMessagesAction"/>
        <xs:element name="ForwardMessagesWithPrepare" type="forwardMessagesWithPrepareAction"/>
        <xs:element name="ForwardData" type="forwardDataAction"/>
        <xs:element name="GenericReceive" type="genericReceiveAction"/>
        <xs:element name="ReceiveTill" type="receiveTillAction"/>
        <xs:element name="TightReceive" type="tightReceiveAction"/>
        <xs:element name="MultiReceive" type="multiReceiveAction"/>
        <xs:element name="PopAndSend" type="popAndSendAction"/>
        <xs:element name="PopAndSendMessage" type="popAndSendMessageAction"/>
        <xs:element name="PopAndSendRecord" type="popAndSendRecordAction"/>
        <xs:element name="PopBuffers" type="popBuffersAction"/>
        <xs:element name="PopBufferedMessage" type="popBufferedMessageAction"/>
        <xs:element name="PopBufferedRecord" type="popBufferedRecordAction"/>
        <xs:element name="PrintLastHandledApplicationData" type="printLastHandledApplicationDataAction"/>
        <xs:element name="PrintProposedExtensions" type="printProposedExtensionsAction"/>
        <xs:element name="PrintSecrets" type="printSecretsAction"/>
        <xs:element name="Receive" type="receiveAction"/>
        <xs:element name="RemBufferedChCiphers" type="remBufferedChCiphersAction"/>
        <xs:element name="RemBufferedChExtensions" type="remBufferedChExtensionsAction"/>
        <xs:element name="Renegotiation" type="renegotiationAction"/>
        <xs:element name="ResetRecordCipherLists" type="resetRecordCipherListsAction"/>
        <xs:element name="ResetConnection" type="resetConnectionAction"/>
        <xs:element name="Send" type="sendAction"/>
        <xs:element name="SendDynamicClientKeyExchange" type="sendDynamicClientKeyExchangeAction"/>
        <xs:element name="SendDynamicServerKeyExchange" type="sendDynamicServerKeyExchangeAction"/>
        <xs:element name="SendDynamicCertificate" type="sendDynamicServerCertificateAction"/>
        <xs:element name="SendRaccoonCke" type="sendRaccoonCkeAction"/>
        <xs:element name="SendMessagesFromLastFlight" type="sendMessagesFromLastFlightAction"/>
        <xs:element name="SendRecordsFromLastFlight" type="sendRecordsFromLastFlightAction"/>
        <xs:element name="SetEncryptChangeCipherSpecConfig" type="setEncryptChangeCipherSpecConfigAction"/>
        <xs:element name="Wait" type="waitAction"/>
        <xs:element name="FlushSessionCache" type="flushSessionCacheAction"/>
        <xs:element name="SendAscii" type="sendAsciiAction"/>
        <xs:element name="ReceiveAscii" type="receiveAsciiAction"/>
        <xs:element name="GenericReceiveAscii" type="genericReceiveAsciiAction"/>
      </xs:choice>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="aliasedConnection" abstract="true">
    <xs:sequence>
      <xs:element name="alias" type="xs:string" minOccurs="0"/>
      <xs:element name="ip" type="xs:string" minOccurs="0"/>
      <xs:element name="port" type="xs:int" minOccurs="0"/>
      <xs:element name="hostname" type="xs:string" minOccurs="0"/>
      <xs:element name="proxyDataPort" type="xs:int" minOccurs="0"/>
      <xs:element name="proxyDataHostname" type="xs:string" minOccurs="0"/>
      <xs:element name="proxyControlPort" type="xs:int" minOccurs="0"/>
      <xs:element name="proxyControlHostname" type="xs:string" minOccurs="0"/>
      <xs:element name="timeout" type="xs:int" minOccurs="0"/>
      <xs:element name="firstTimeout" type="xs:int" minOccurs="0"/>
      <xs:element name="connectionTimeout" type="xs:int" minOccurs="0"/>
      <xs:element name="transportHandlerType" type="transportHandlerType" minOccurs="0"/>
      <xs:element name="sourcePort" type="xs:int" minOccurs="0"/>
      <xs:element name="networkInterface" type="networkInterface" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="networkInterface" final="extension restriction">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="inboundConnection">
    <xs:complexContent>
      <xs:extension base="aliasedConnection">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="outboundConnection">
    <xs:complexContent>
      <xs:extension base="aliasedConnection">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="activateDecryptionAction">
    <xs:complexContent>
      <xs:extension base="activateCryptoAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="activateCryptoAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="connectionBoundAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="tlsAction">
        <xs:sequence>
          <xs:element name="connectionAlias" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="tlsAction" abstract="true">
    <xs:sequence>
      <xs:element name="executed" type="xs:boolean" minOccurs="0"/>
      <xs:element name="actionOptions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ActionOption" type="actionOption" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="activateEncryptionAction">
    <xs:complexContent>
      <xs:extension base="activateCryptoAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="applyBufferedMessagesAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="bufferedGenericReceiveAction">
    <xs:complexContent>
      <xs:extension base="genericReceiveAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="genericReceiveAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="messageAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="messages" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element ref="Certificate"/>
                  <xs:element ref="DtlsHandshakeMessageFragment"/>
                  <xs:element ref="CertificateVerify"/>
                  <xs:element ref="CertificateRequest"/>
                  <xs:element ref="ClientHello"/>
                  <xs:element ref="HelloVerifyRequest"/>
                  <xs:element ref="DHClientKeyExchange"/>
                  <xs:element ref="DHEClientKeyExchange"/>
                  <xs:element ref="ECDHClientKeyExchange"/>
                  <xs:element ref="ECDHEServerKeyExchange"/>
                  <xs:element ref="PskClientKeyExchange"/>
                  <xs:element ref="Finished"/>
                  <xs:element ref="RSAClientKeyExchange"/>
                  <xs:element ref="GOSTClientKeyExchange"/>
                  <xs:element ref="ServerHelloDone"/>
                  <xs:element ref="ServerHello"/>
                  <xs:element ref="Alert"/>
                  <xs:element ref="NewSessionTicket"/>
                  <xs:element ref="KeyUpdate"/>
                  <xs:element ref="Application"/>
                  <xs:element ref="ChangeCipherSpec"/>
                  <xs:element ref="SSL2ClientHello"/>
                  <xs:element ref="SSL2ClientMasterKey"/>
                  <xs:element ref="SSL2ServerHello"/>
                  <xs:element ref="SSL2ServerVerify"/>
                  <xs:element ref="UnknownSSL2Message"/>
                  <xs:element ref="UnknownMessage"/>
                  <xs:element ref="UnknownHandshakeMessage"/>
                  <xs:element ref="HelloRequest"/>
                  <xs:element ref="Heartbeat"/>
                  <xs:element ref="SupplementalData"/>
                  <xs:element ref="EncryptedExtensions"/>
                  <xs:element ref="PskDhClientKeyExchange"/>
                  <xs:element ref="PskDheServerKeyExchange"/>
                  <xs:element ref="PskEcDhClientKeyExchange"/>
                  <xs:element ref="PskEcDheServerKeyExchange"/>
                  <xs:element ref="PskRsaClientKeyExchange"/>
                  <xs:element ref="SrpClientKeyExchange"/>
                  <xs:element ref="SrpServerKeyExchange"/>
                  <xs:element ref="EndOfEarlyData"/>
                  <xs:element ref="PWDServerKeyExchange"/>
                  <xs:element ref="RSAServerKeyExchange"/>
                  <xs:element ref="PWDClientKeyExchange"/>
                  <xs:element ref="PskServerKeyExchange"/>
                  <xs:element ref="CertificateStatus"/>
                  <xs:element ref="EmptyClientKeyExchange"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="httpMessages" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="HttpMessage" type="httpMessage" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="records" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Record" type="record" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="fragments" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DtlsFragment" type="dtlsHandshakeMessageFragment" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="protocolMessage" abstract="true">
    <xs:complexContent>
      <xs:extension base="message">
        <xs:sequence>
          <xs:element name="completeResultingMessage" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="required" type="modifiableBoolean" minOccurs="0"/>
          <xs:element name="goingToBeSent" type="modifiableBoolean" minOccurs="0"/>
          <xs:element name="adjustContext" type="modifiableBoolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="message" abstract="true">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="modifiableVariableHolder" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="modifiableByteArray">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="BigIntegerXorModification" type="bigIntegerXorModification"/>
        <xs:element name="BigIntegerSubtractModification" type="bigIntegerSubtractModification"/>
        <xs:element name="BigIntegerShiftRightModification" type="bigIntegerShiftRightModification"/>
        <xs:element name="BigIntegerShiftLeftModification" type="bigIntegerShiftLeftModification"/>
        <xs:element name="BigIntegerExplicitValueModification" type="bigIntegerExplicitValueModification"/>
        <xs:element name="BigIntegerAddModification" type="bigIntegerAddModification"/>
        <xs:element name="BigIntegerInteractiveModification" type="bigIntegerInteractiveModification"/>
        <xs:element name="BigIntegerMultiplyModification" type="bigIntegerMultiplyModification"/>
        <xs:element name="BooleanToggleModification" type="booleanToggleModification"/>
        <xs:element name="BooleanExplicitValueModification" type="booleanExplicitValueModification"/>
        <xs:element name="ByteArrayXorModification" type="byteArrayXorModification"/>
        <xs:element name="ByteArrayShuffleModification" type="byteArrayShuffleModification"/>
        <xs:element name="ByteArrayPayloadModification" type="byteArrayPayloadModification"/>
        <xs:element name="ByteArrayInsertModification" type="byteArrayInsertModification"/>
        <xs:element name="ByteArrayExplicitValueModification" type="byteArrayExplicitValueModification"/>
        <xs:element name="ByteArrayDuplicateModification" type="byteArrayDuplicateModification"/>
        <xs:element name="ByteArrayDeleteModification" type="byteArrayDeleteModification"/>
        <xs:element name="IntegerXorModification" type="integerXorModification"/>
        <xs:element name="IntegerSubtractModification" type="integerSubtractModification"/>
        <xs:element name="IntegerShiftRightModification" type="integerShiftRightModification"/>
        <xs:element name="IntegerShiftLeftModification" type="integerShiftLeftModification"/>
        <xs:element name="IntegerExplicitValueModification" type="integerExplicitValueModification"/>
        <xs:element name="IntegerAddModification" type="integerAddModification"/>
        <xs:element name="LongXorModification" type="longXorModification"/>
        <xs:element name="LongSubtractModification" type="longSubtractModification"/>
        <xs:element name="LongExplicitValueModification" type="longExplicitValueModification"/>
        <xs:element name="LongAddModification" type="longAddModification"/>
        <xs:element name="ByteXorModification" type="byteXorModification"/>
        <xs:element name="ByteSubtractModification" type="byteSubtractModification"/>
        <xs:element name="ByteAddModification" type="byteAddModification"/>
        <xs:element name="ByteExplicitValueModification" type="byteExplicitValueModification"/>
        <xs:element name="StringExplicitValueModification" type="stringExplicitValueModification"/>
      </xs:choice>
      <xs:element name="assertEquals" type="xs:string" minOccurs="0"/>
      <xs:element name="originalValue" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="bigIntegerXorModification">
    <xs:sequence>
      <xs:element name="xor" type="xs:integer" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="accessModificationFilter">
    <xs:complexContent>
      <xs:extension base="modificationFilter">
        <xs:sequence>
          <xs:element name="accessCounter" type="xs:int"/>
          <xs:element name="accessNumbers" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="modificationFilter" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="bigIntegerSubtractModification">
    <xs:sequence>
      <xs:element name="subtrahend" type="xs:integer" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="bigIntegerShiftRightModification">
    <xs:sequence>
      <xs:element name="shift" type="xs:int"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="bigIntegerShiftLeftModification">
    <xs:sequence>
      <xs:element name="shift" type="xs:int"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="bigIntegerExplicitValueModification">
    <xs:sequence>
      <xs:element name="explicitValue" type="xs:integer" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="bigIntegerAddModification">
    <xs:sequence>
      <xs:element name="summand" type="xs:integer" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="bigIntegerInteractiveModification">
    <xs:sequence>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="bigIntegerMultiplyModification">
    <xs:sequence>
      <xs:element name="factor" type="xs:integer" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="booleanToggleModification">
    <xs:sequence>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="booleanExplicitValueModification">
    <xs:sequence>
      <xs:element name="explicitValue" type="xs:boolean"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteArrayXorModification">
    <xs:sequence>
      <xs:element name="xor" type="xs:string" minOccurs="0"/>
      <xs:element name="startPosition" type="xs:int"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteArrayShuffleModification">
    <xs:sequence>
      <xs:element name="shuffle" type="xs:string" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteArrayPayloadModification">
    <xs:sequence>
      <xs:element name="prependPayload" type="xs:string" minOccurs="0"/>
      <xs:element name="payload" type="xs:string" minOccurs="0"/>
      <xs:element name="appendPayload" type="xs:string" minOccurs="0"/>
      <xs:element name="insert" type="xs:boolean"/>
      <xs:element name="insertPosition" type="xs:int"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteArrayInsertModification">
    <xs:sequence>
      <xs:element name="bytesToInsert" type="xs:string" minOccurs="0"/>
      <xs:element name="startPosition" type="xs:int"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteArrayExplicitValueModification">
    <xs:sequence>
      <xs:element name="explicitValue" type="xs:string" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteArrayDuplicateModification">
    <xs:sequence>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteArrayDeleteModification">
    <xs:sequence>
      <xs:element name="count" type="xs:int"/>
      <xs:element name="startPosition" type="xs:int"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="integerXorModification">
    <xs:sequence>
      <xs:element name="xor" type="xs:int" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="integerSubtractModification">
    <xs:sequence>
      <xs:element name="subtrahend" type="xs:int" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="integerShiftRightModification">
    <xs:sequence>
      <xs:element name="shift" type="xs:int"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="integerShiftLeftModification">
    <xs:sequence>
      <xs:element name="shift" type="xs:int"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="integerExplicitValueModification">
    <xs:sequence>
      <xs:element name="explicitValue" type="xs:int" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="integerAddModification">
    <xs:sequence>
      <xs:element name="summand" type="xs:int" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="longXorModification">
    <xs:sequence>
      <xs:element name="xor" type="xs:long" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="longSubtractModification">
    <xs:sequence>
      <xs:element name="subtrahend" type="xs:long" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="longExplicitValueModification">
    <xs:sequence>
      <xs:element name="explicitValue" type="xs:long" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="longAddModification">
    <xs:sequence>
      <xs:element name="summand" type="xs:long" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteXorModification">
    <xs:sequence>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
      <xs:element name="xor" type="xs:byte" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteSubtractModification">
    <xs:sequence>
      <xs:element name="subtrahend" type="xs:byte" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteAddModification">
    <xs:sequence>
      <xs:element name="summand" type="xs:byte" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="byteExplicitValueModification">
    <xs:sequence>
      <xs:element name="explicitValue" type="xs:byte" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="stringExplicitValueModification">
    <xs:sequence>
      <xs:element name="explicitValue" type="xs:string" minOccurs="0"/>
      <xs:element name="AccessModificationFilter" type="accessModificationFilter" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="modifiableBoolean">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="BigIntegerXorModification" type="bigIntegerXorModification"/>
        <xs:element name="BigIntegerSubtractModification" type="bigIntegerSubtractModification"/>
        <xs:element name="BigIntegerShiftRightModification" type="bigIntegerShiftRightModification"/>
        <xs:element name="BigIntegerShiftLeftModification" type="bigIntegerShiftLeftModification"/>
        <xs:element name="BigIntegerExplicitValueModification" type="bigIntegerExplicitValueModification"/>
        <xs:element name="BigIntegerAddModification" type="bigIntegerAddModification"/>
        <xs:element name="BigIntegerInteractiveModification" type="bigIntegerInteractiveModification"/>
        <xs:element name="BigIntegerMultiplyModification" type="bigIntegerMultiplyModification"/>
        <xs:element name="BooleanToggleModification" type="booleanToggleModification"/>
        <xs:element name="BooleanExplicitValueModification" type="booleanExplicitValueModification"/>
        <xs:element name="ByteArrayXorModification" type="byteArrayXorModification"/>
        <xs:element name="ByteArrayShuffleModification" type="byteArrayShuffleModification"/>
        <xs:element name="ByteArrayPayloadModification" type="byteArrayPayloadModification"/>
        <xs:element name="ByteArrayInsertModification" type="byteArrayInsertModification"/>
        <xs:element name="ByteArrayExplicitValueModification" type="byteArrayExplicitValueModification"/>
        <xs:element name="ByteArrayDuplicateModification" type="byteArrayDuplicateModification"/>
        <xs:element name="ByteArrayDeleteModification" type="byteArrayDeleteModification"/>
        <xs:element name="IntegerXorModification" type="integerXorModification"/>
        <xs:element name="IntegerSubtractModification" type="integerSubtractModification"/>
        <xs:element name="IntegerShiftRightModification" type="integerShiftRightModification"/>
        <xs:element name="IntegerShiftLeftModification" type="integerShiftLeftModification"/>
        <xs:element name="IntegerExplicitValueModification" type="integerExplicitValueModification"/>
        <xs:element name="IntegerAddModification" type="integerAddModification"/>
        <xs:element name="LongXorModification" type="longXorModification"/>
        <xs:element name="LongSubtractModification" type="longSubtractModification"/>
        <xs:element name="LongExplicitValueModification" type="longExplicitValueModification"/>
        <xs:element name="LongAddModification" type="longAddModification"/>
        <xs:element name="ByteXorModification" type="byteXorModification"/>
        <xs:element name="ByteSubtractModification" type="byteSubtractModification"/>
        <xs:element name="ByteAddModification" type="byteAddModification"/>
        <xs:element name="ByteExplicitValueModification" type="byteExplicitValueModification"/>
        <xs:element name="StringExplicitValueModification" type="stringExplicitValueModification"/>
      </xs:choice>
      <xs:element name="createRandomModification" type="xs:boolean" minOccurs="0"/>
      <xs:element name="assertEquals" type="xs:anyType" minOccurs="0"/>
      <xs:element name="originalValue" type="xs:boolean" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="httpMessage" abstract="true">
    <xs:complexContent>
      <xs:extension base="message">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="httpRequestMessage">
    <xs:complexContent>
      <xs:extension base="httpMessage">
        <xs:sequence>
          <xs:element name="header" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="HttpHeader" type="genericHttpHeader"/>
                  <xs:element name="ContentLengthHeader" type="contentLengthHeader"/>
                  <xs:element name="DateHeader" type="dateHeader"/>
                  <xs:element name="ExpiresHeader" type="expiresHeader"/>
                  <xs:element name="LocationHeader" type="locationHeader"/>
                  <xs:element name="HostHeader" type="hostHeader"/>
                  <xs:element name="TokenBindingHeader" type="tokenBindingHeader"/>
                  <xs:element name="CookieHeader" type="tokenBindingHeader"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="requestType" type="modifiableString" minOccurs="0"/>
          <xs:element name="requestPath" type="modifiableString" minOccurs="0"/>
          <xs:element name="requestProtocol" type="modifiableString" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="genericHttpHeader">
    <xs:complexContent>
      <xs:extension base="httpHeader">
        <xs:sequence>
          <xs:element name="headerNameConfig" type="xs:string" minOccurs="0"/>
          <xs:element name="headerValueConfig" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="httpHeader" abstract="true">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="headerName" type="modifiableString" minOccurs="0"/>
          <xs:element name="headerValue" type="modifiableString" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="modifiableString">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="BigIntegerXorModification" type="bigIntegerXorModification"/>
        <xs:element name="BigIntegerSubtractModification" type="bigIntegerSubtractModification"/>
        <xs:element name="BigIntegerShiftRightModification" type="bigIntegerShiftRightModification"/>
        <xs:element name="BigIntegerShiftLeftModification" type="bigIntegerShiftLeftModification"/>
        <xs:element name="BigIntegerExplicitValueModification" type="bigIntegerExplicitValueModification"/>
        <xs:element name="BigIntegerAddModification" type="bigIntegerAddModification"/>
        <xs:element name="BigIntegerInteractiveModification" type="bigIntegerInteractiveModification"/>
        <xs:element name="BigIntegerMultiplyModification" type="bigIntegerMultiplyModification"/>
        <xs:element name="BooleanToggleModification" type="booleanToggleModification"/>
        <xs:element name="BooleanExplicitValueModification" type="booleanExplicitValueModification"/>
        <xs:element name="ByteArrayXorModification" type="byteArrayXorModification"/>
        <xs:element name="ByteArrayShuffleModification" type="byteArrayShuffleModification"/>
        <xs:element name="ByteArrayPayloadModification" type="byteArrayPayloadModification"/>
        <xs:element name="ByteArrayInsertModification" type="byteArrayInsertModification"/>
        <xs:element name="ByteArrayExplicitValueModification" type="byteArrayExplicitValueModification"/>
        <xs:element name="ByteArrayDuplicateModification" type="byteArrayDuplicateModification"/>
        <xs:element name="ByteArrayDeleteModification" type="byteArrayDeleteModification"/>
        <xs:element name="IntegerXorModification" type="integerXorModification"/>
        <xs:element name="IntegerSubtractModification" type="integerSubtractModification"/>
        <xs:element name="IntegerShiftRightModification" type="integerShiftRightModification"/>
        <xs:element name="IntegerShiftLeftModification" type="integerShiftLeftModification"/>
        <xs:element name="IntegerExplicitValueModification" type="integerExplicitValueModification"/>
        <xs:element name="IntegerAddModification" type="integerAddModification"/>
        <xs:element name="LongXorModification" type="longXorModification"/>
        <xs:element name="LongSubtractModification" type="longSubtractModification"/>
        <xs:element name="LongExplicitValueModification" type="longExplicitValueModification"/>
        <xs:element name="LongAddModification" type="longAddModification"/>
        <xs:element name="ByteXorModification" type="byteXorModification"/>
        <xs:element name="ByteSubtractModification" type="byteSubtractModification"/>
        <xs:element name="ByteAddModification" type="byteAddModification"/>
        <xs:element name="ByteExplicitValueModification" type="byteExplicitValueModification"/>
        <xs:element name="StringExplicitValueModification" type="stringExplicitValueModification"/>
      </xs:choice>
      <xs:element name="createRandomModification" type="xs:boolean" minOccurs="0"/>
      <xs:element name="assertEquals" type="xs:anyType" minOccurs="0"/>
      <xs:element name="originalValue" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="contentLengthHeader">
    <xs:complexContent>
      <xs:extension base="httpHeader">
        <xs:sequence>
          <xs:element name="configLength" type="xs:int"/>
          <xs:element name="length" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="modifiableInteger">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="BigIntegerXorModification" type="bigIntegerXorModification"/>
        <xs:element name="BigIntegerSubtractModification" type="bigIntegerSubtractModification"/>
        <xs:element name="BigIntegerShiftRightModification" type="bigIntegerShiftRightModification"/>
        <xs:element name="BigIntegerShiftLeftModification" type="bigIntegerShiftLeftModification"/>
        <xs:element name="BigIntegerExplicitValueModification" type="bigIntegerExplicitValueModification"/>
        <xs:element name="BigIntegerAddModification" type="bigIntegerAddModification"/>
        <xs:element name="BigIntegerInteractiveModification" type="bigIntegerInteractiveModification"/>
        <xs:element name="BigIntegerMultiplyModification" type="bigIntegerMultiplyModification"/>
        <xs:element name="BooleanToggleModification" type="booleanToggleModification"/>
        <xs:element name="BooleanExplicitValueModification" type="booleanExplicitValueModification"/>
        <xs:element name="ByteArrayXorModification" type="byteArrayXorModification"/>
        <xs:element name="ByteArrayShuffleModification" type="byteArrayShuffleModification"/>
        <xs:element name="ByteArrayPayloadModification" type="byteArrayPayloadModification"/>
        <xs:element name="ByteArrayInsertModification" type="byteArrayInsertModification"/>
        <xs:element name="ByteArrayExplicitValueModification" type="byteArrayExplicitValueModification"/>
        <xs:element name="ByteArrayDuplicateModification" type="byteArrayDuplicateModification"/>
        <xs:element name="ByteArrayDeleteModification" type="byteArrayDeleteModification"/>
        <xs:element name="IntegerXorModification" type="integerXorModification"/>
        <xs:element name="IntegerSubtractModification" type="integerSubtractModification"/>
        <xs:element name="IntegerShiftRightModification" type="integerShiftRightModification"/>
        <xs:element name="IntegerShiftLeftModification" type="integerShiftLeftModification"/>
        <xs:element name="IntegerExplicitValueModification" type="integerExplicitValueModification"/>
        <xs:element name="IntegerAddModification" type="integerAddModification"/>
        <xs:element name="LongXorModification" type="longXorModification"/>
        <xs:element name="LongSubtractModification" type="longSubtractModification"/>
        <xs:element name="LongExplicitValueModification" type="longExplicitValueModification"/>
        <xs:element name="LongAddModification" type="longAddModification"/>
        <xs:element name="ByteXorModification" type="byteXorModification"/>
        <xs:element name="ByteSubtractModification" type="byteSubtractModification"/>
        <xs:element name="ByteAddModification" type="byteAddModification"/>
        <xs:element name="ByteExplicitValueModification" type="byteExplicitValueModification"/>
        <xs:element name="StringExplicitValueModification" type="stringExplicitValueModification"/>
      </xs:choice>
      <xs:element name="createRandomModification" type="xs:boolean" minOccurs="0"/>
      <xs:element name="assertEquals" type="xs:anyType" minOccurs="0"/>
      <xs:element name="originalValue" type="xs:int" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="dateHeader">
    <xs:complexContent>
      <xs:extension base="httpHeader">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="expiresHeader">
    <xs:complexContent>
      <xs:extension base="httpHeader">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="locationHeader">
    <xs:complexContent>
      <xs:extension base="httpHeader">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="hostHeader">
    <xs:complexContent>
      <xs:extension base="httpHeader">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="tokenBindingHeader">
    <xs:complexContent>
      <xs:extension base="httpHeader">
        <xs:sequence>
          <xs:element name="message" type="tokenBindingMessage" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="tokenBindingMessage">
    <xs:complexContent>
      <xs:extension base="protocolMessage">
        <xs:sequence>
          <xs:element name="tokenbindingsLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="tokenbindingType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="keyParameter" type="modifiableByte" minOccurs="0"/>
          <xs:element name="keyLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="modulusLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="modulus" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="publicExponentLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="publicExponent" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="pointLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="point" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="signatureLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="signature" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="extensionLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="extensionBytes" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="modifiableByte">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="BigIntegerXorModification" type="bigIntegerXorModification"/>
        <xs:element name="BigIntegerSubtractModification" type="bigIntegerSubtractModification"/>
        <xs:element name="BigIntegerShiftRightModification" type="bigIntegerShiftRightModification"/>
        <xs:element name="BigIntegerShiftLeftModification" type="bigIntegerShiftLeftModification"/>
        <xs:element name="BigIntegerExplicitValueModification" type="bigIntegerExplicitValueModification"/>
        <xs:element name="BigIntegerAddModification" type="bigIntegerAddModification"/>
        <xs:element name="BigIntegerInteractiveModification" type="bigIntegerInteractiveModification"/>
        <xs:element name="BigIntegerMultiplyModification" type="bigIntegerMultiplyModification"/>
        <xs:element name="BooleanToggleModification" type="booleanToggleModification"/>
        <xs:element name="BooleanExplicitValueModification" type="booleanExplicitValueModification"/>
        <xs:element name="ByteArrayXorModification" type="byteArrayXorModification"/>
        <xs:element name="ByteArrayShuffleModification" type="byteArrayShuffleModification"/>
        <xs:element name="ByteArrayPayloadModification" type="byteArrayPayloadModification"/>
        <xs:element name="ByteArrayInsertModification" type="byteArrayInsertModification"/>
        <xs:element name="ByteArrayExplicitValueModification" type="byteArrayExplicitValueModification"/>
        <xs:element name="ByteArrayDuplicateModification" type="byteArrayDuplicateModification"/>
        <xs:element name="ByteArrayDeleteModification" type="byteArrayDeleteModification"/>
        <xs:element name="IntegerXorModification" type="integerXorModification"/>
        <xs:element name="IntegerSubtractModification" type="integerSubtractModification"/>
        <xs:element name="IntegerShiftRightModification" type="integerShiftRightModification"/>
        <xs:element name="IntegerShiftLeftModification" type="integerShiftLeftModification"/>
        <xs:element name="IntegerExplicitValueModification" type="integerExplicitValueModification"/>
        <xs:element name="IntegerAddModification" type="integerAddModification"/>
        <xs:element name="LongXorModification" type="longXorModification"/>
        <xs:element name="LongSubtractModification" type="longSubtractModification"/>
        <xs:element name="LongExplicitValueModification" type="longExplicitValueModification"/>
        <xs:element name="LongAddModification" type="longAddModification"/>
        <xs:element name="ByteXorModification" type="byteXorModification"/>
        <xs:element name="ByteSubtractModification" type="byteSubtractModification"/>
        <xs:element name="ByteAddModification" type="byteAddModification"/>
        <xs:element name="ByteExplicitValueModification" type="byteExplicitValueModification"/>
        <xs:element name="StringExplicitValueModification" type="stringExplicitValueModification"/>
      </xs:choice>
      <xs:element name="createRandomModification" type="xs:boolean" minOccurs="0"/>
      <xs:element name="assertEquals" type="xs:anyType" minOccurs="0"/>
      <xs:element name="originalValue" type="xs:byte" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="httpResponseMessage">
    <xs:complexContent>
      <xs:extension base="httpMessage">
        <xs:sequence>
          <xs:element name="responseProtocol" type="modifiableString" minOccurs="0"/>
          <xs:element name="responseStatusCode" type="modifiableString" minOccurs="0"/>
          <xs:element name="responseContent" type="modifiableString" minOccurs="0"/>
          <xs:element name="header" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="HttpHeader" type="genericHttpHeader"/>
                  <xs:element name="ContentLengthHeader" type="contentLengthHeader"/>
                  <xs:element name="DateHeader" type="dateHeader"/>
                  <xs:element name="ExpiresHeader" type="expiresHeader"/>
                  <xs:element name="LocationHeader" type="locationHeader"/>
                  <xs:element name="HostHeader" type="hostHeader"/>
                  <xs:element name="TokenBindingHeader" type="tokenBindingHeader"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="certificateMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="requestContextLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="requestContext" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="certificatesListLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="certificatesListBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="certificatesList" type="certificatePair" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="certificateListConfig" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="certificatesListConfig" type="certificatePair" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="certificatesListAsEntry" type="certificateEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="handshakeMessage" abstract="true">
    <xs:complexContent>
      <xs:extension base="protocolMessage">
        <xs:sequence>
          <xs:element name="type" type="modifiableByte" minOccurs="0"/>
          <xs:element name="length" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="includeInDigest" type="modifiableBoolean" minOccurs="0"/>
          <xs:element name="retransmission" type="modifiableBoolean" minOccurs="0"/>
          <xs:element name="messageContent" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="extensions" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element ref="EncryptedServerNameIndicationExtension"/>
                  <xs:element ref="ECPointFormat"/>
                  <xs:element ref="EllipticCurves"/>
                  <xs:element ref="ExtendedMasterSecretExtension"/>
                  <xs:element ref="GreaseExtension"/>
                  <xs:element ref="HeartbeatExtension"/>
                  <xs:element ref="MaxFragmentLengthExtension"/>
                  <xs:element ref="RecordSizeLimitExtension"/>
                  <xs:element ref="PaddingExtension"/>
                  <xs:element ref="RenegotiationInfoExtension"/>
                  <xs:element ref="ServerNameIndicationExtension"/>
                  <xs:element ref="SessionTicketTLSExtension"/>
                  <xs:element ref="SignatureAndHashAlgorithmsExtension"/>
                  <xs:element ref="SignatureAlgorithmsCertExtension"/>
                  <xs:element ref="SignedCertificateTimestampExtension"/>
                  <xs:element ref="ExtendedRandomExtension"/>
                  <xs:element ref="TokenBindingExtension"/>
                  <xs:element ref="KeyShareExtension"/>
                  <xs:element ref="SupportedVersions"/>
                  <xs:element ref="AlpnExtension"/>
                  <xs:element ref="CertificateStatusRequestExtension"/>
                  <xs:element ref="CertificateStatusRequestV2Extension"/>
                  <xs:element ref="CertificateTypeExtension"/>
                  <xs:element ref="ClientCertificateUrlExtension"/>
                  <xs:element ref="ClientCertificateTypeExtension"/>
                  <xs:element ref="ClientAuthorizationExtension"/>
                  <xs:element ref="EncryptThenMacExtension"/>
                  <xs:element ref="ServerAuthorizationExtension"/>
                  <xs:element ref="ServerCertificateTypeExtension"/>
                  <xs:element ref="SrtpExtension"/>
                  <xs:element ref="TrustedCaIndicationExtension"/>
                  <xs:element ref="TruncatedHmacExtension"/>
                  <xs:element ref="EarlyDataExtension"/>
                  <xs:element ref="PSKKeyExchangeModesExtension"/>
                  <xs:element ref="PreSharedKeyExtension"/>
                  <xs:element ref="UnknownExtension"/>
                  <xs:element ref="PWDClearExtension"/>
                  <xs:element ref="PWDProtectExtension"/>
                  <xs:element ref="PasswordSaltExtension"/>
                  <xs:element ref="CachedInfoExtension"/>
                  <xs:element ref="CookieExtension"/>
                  <xs:element ref="userMappingExtensionMessage"/>
                  <xs:element ref="SRPExtension"/>
                  <xs:element ref="ConnectionIdExtension"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="extensionBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="extensionsLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="messageSequence" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="certificatePair">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="certificateConfig" type="xs:string" minOccurs="0"/>
          <xs:element name="extensionsConfig" type="extensionMessage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="certificate" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="certificateLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="extensions" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="extensionsLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="extensionMessage" abstract="true">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="extensionBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="extensionContent" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="extensionLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="extensionType" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="encryptedServerNameIndicationExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="cipherSuite" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="clientEsniInner" type="clientEsniInner" minOccurs="0"/>
          <xs:element name="clientEsniInnerBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="encryptedSni" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="encryptedSniComputation" type="encryptedSniComputation" minOccurs="0"/>
          <xs:element name="encryptedSniLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="esniMessageTypeConfig" type="esniMessageType" minOccurs="0"/>
          <xs:element name="keyShareEntry" type="keyShareEntry" minOccurs="0"/>
          <xs:element name="recordDigest" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="recordDigestLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="serverNonce" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clientEsniInner">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="clientNonce" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="padding" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="serverNameList" type="serverNamePair" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverNameListBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="serverNameListLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverNamePair">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="serverName" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="serverNameConfig" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="serverNameLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="serverNameType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="serverNameTypeConfig" type="xs:byte"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="encryptedSniComputation">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="clientHelloKeyShare" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="clientHelloRandom" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="esniContents" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="esniContentsHash" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="esniIv" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="esniKey" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="esniMasterSecret" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="esniRecordBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="esniServerPublicKey" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="esniSharedSecret" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="keyShareEntry">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="group" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="groupConfig" type="namedGroup" minOccurs="0"/>
          <xs:element name="privateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="publicKey" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="publicKeyLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ecPointFormatExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="pointFormats" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="pointFormatsLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ellipticCurvesExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="supportedGroups" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="supportedGroupsLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="extendedMasterSecretExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="greaseExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="data" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="randomData" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="heartbeatExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="heartbeatMode" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="heartbeatModeConfig" type="heartbeatMode" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="maxFragmentLengthExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="maxFragmentLength" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="recordSizeLimitExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="recordSizeLimit" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="paddingExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="paddingBytes" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="renegotiationInfoExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="renegotiationInfo" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="renegotiationInfoLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverNameIndicationExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="serverNameList" type="serverNamePair" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverNameListBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="serverNameListLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sessionTicketTLSExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="sessionTicket" type="sessionTicket" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sessionTicket">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="encryptedState" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="encryptedStateLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="IV" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identity" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="keyName" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="MAC" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="ticketAgeAdd" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="ticketNonce" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="ticketNonceLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="signatureAndHashAlgorithmsExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="signatureAndHashAlgorithms" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="signatureAndHashAlgorithmsLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="signatureAlgorithmsCertExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="signatureAndHashAlgorithms" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="signatureAndHashAlgorithmsLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="signedCertificateTimestampExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="signedTimestamp" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="extendedRandomExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="extendedRandom" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="extendedRandomLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="tokenBindingExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="parameterListLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="tokenBindingKeyParameters" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="tokenBindingVersion" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="keyShareExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="keyShareListLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="keyShareListBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="keyShareList" type="keyShareEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="retryRequestMode" type="modifiableBoolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="supportedVersionsExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="supportedVersions" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="supportedVersionsLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="alpnExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="alpnEntryList" type="alpnEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="proposedAlpnProtocols" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="proposedAlpnProtocolsLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="alpnEntry">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="alpnEntryLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="alpnEntry" type="modifiableString" minOccurs="0"/>
          <xs:element name="alpnEntryConfig" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="certificateStatusRequestExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="certificateStatusRequestType" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="certificateStatusType" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="ocspResponseBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="ocspResponseLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="requestExtension" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="requestExtensionLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="responderIDList" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="responderIDListLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="certificateStatusRequestV2ExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="statusRequestBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="statusRequestList" type="requestItemV2" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="statusRequestListLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="requestItemV2">
    <xs:sequence>
      <xs:element name="requestExtensionLengthConfig" type="xs:int" minOccurs="0"/>
      <xs:element name="requestExtensions" type="modifiableByteArray" minOccurs="0"/>
      <xs:element name="requestExtensionsConfig" type="xs:base64Binary" minOccurs="0"/>
      <xs:element name="requestExtensionsLength" type="modifiableInteger" minOccurs="0"/>
      <xs:element name="requestLength" type="modifiableInteger" minOccurs="0"/>
      <xs:element name="requestLengthConfig" type="xs:int" minOccurs="0"/>
      <xs:element name="requestType" type="modifiableInteger" minOccurs="0"/>
      <xs:element name="requestTypeConfig" type="xs:int" minOccurs="0"/>
      <xs:element name="responderIdList" type="responderId" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="responderIdListBytes" type="modifiableByteArray" minOccurs="0"/>
      <xs:element name="responderIdListLength" type="modifiableInteger" minOccurs="0"/>
      <xs:element name="responderIdListLengthConfig" type="xs:int" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="responderId">
    <xs:sequence>
      <xs:element name="id" type="modifiableByteArray" minOccurs="0"/>
      <xs:element name="idConfig" type="xs:base64Binary" minOccurs="0"/>
      <xs:element name="idLength" type="modifiableInteger" minOccurs="0"/>
      <xs:element name="idLengthConfig" type="xs:int" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="certificateTypeExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="certificateTypes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="certificateTypesLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="isClientMessage" type="modifiableBoolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clientCertificateUrlExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clientCertificateTypeExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="certificateTypes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="certificateTypesLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="isClientMessage" type="modifiableBoolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clientAuthzExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="authzFormatList" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="authzFormatListLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="encryptThenMacExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverAuthzExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="authzFormatList" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="authzFormatListLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverCertificateTypeExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="certificateTypes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="certificateTypesLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="isClientMessage" type="modifiableBoolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="srtpExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="srtpMki" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="srtpMkiLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="srtpProtectionProfiles" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="srtpProtectionProfilesLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="trustedCaIndicationExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="trustedAuthorities" type="trustedAuthority" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="trustedAuthoritiesBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="trustedAuthoritiesLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="trustedAuthority">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="identifierType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="sha1Hash" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="distinguishedNameLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="distinguishedName" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identifierTypeConfig" type="xs:byte"/>
          <xs:element name="sha1HashConfig" type="xs:string" minOccurs="0"/>
          <xs:element name="distinguishedNameLengthConfig" type="xs:int" minOccurs="0"/>
          <xs:element name="distinguishedNameConfig" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="truncatedHmacExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="earlyDataExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="maxEarlyDataSize" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="newSessionTicketExtension" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskKeyExchangeModesExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="keyExchangeModesConfig" type="xs:string" minOccurs="0"/>
          <xs:element name="keyExchangeModesListLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="keyExchangeModesListBytes" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="preSharedKeyExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="binderListBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="binderListLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="binders" type="pskBinder" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="identities" type="pskIdentity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="identityListBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityListLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="selectedIdentity" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskBinder">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="binderCipherConfig" type="cipherSuite" minOccurs="0"/>
          <xs:element name="binderEntry" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="binderEntryLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskIdentity">
    <xs:sequence>
      <xs:element name="identityConfig" type="xs:string" minOccurs="0"/>
      <xs:element name="ticketAgeConfig" type="xs:string" minOccurs="0"/>
      <xs:element name="ticketAgeAddConfig" type="xs:string" minOccurs="0"/>
      <xs:element name="identityLength" type="modifiableInteger" minOccurs="0"/>
      <xs:element name="identity" type="modifiableByteArray" minOccurs="0"/>
      <xs:element name="obfuscatedTicketAge" type="modifiableByteArray" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="unknownExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="dataConfig" type="xs:string" minOccurs="0"/>
          <xs:element name="extensionData" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="typeConfig" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pwdClearExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="username" type="modifiableString" minOccurs="0"/>
          <xs:element name="usernameLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pwdProtectExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="username" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="usernameLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="passwordSaltExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="salt" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="saltLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="cachedInfoExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="cachedInfo" type="cachedObject" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="cachedInfoBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="cachedInfoLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="cachedObject">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="cachedInformationType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="cachedInformationTypeConfig" type="xs:byte"/>
          <xs:element name="hashValue" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="hashValueConfig" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="hashValueLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="cookieExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="cookie" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="cookieLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dtlsHandshakeMessageFragment">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="fragmentOffset" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="fragmentLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="epoch" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="fragmentContentConfig" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="messageSequenceConfig" type="xs:int"/>
          <xs:element name="offsetConfig" type="xs:int"/>
          <xs:element name="handshakeMessageLengthConfig" type="xs:int"/>
          <xs:element name="handshakeMessageTypeConfig" type="handshakeMessageType" minOccurs="0"/>
          <xs:element name="maxFragmentLengthConfig" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="userMappingExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="userMappingType" type="modifiableByte" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="srpExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="srpIdentifier" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="srpIdentifierLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="connectionIdExtensionMessage">
    <xs:complexContent>
      <xs:extension base="extensionMessage">
        <xs:sequence>
          <xs:element name="connectionId" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="connectionIdLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="certificateEntry">
    <xs:sequence>
      <xs:element name="certificate" type="xs:string" minOccurs="0"/>
      <xs:element name="extensions" type="extensionMessage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="certificateVerifyMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="signatureHashAlgorithm" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="signatureLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="signature" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="certificateRequestMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="clientCertificateTypesCount" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="clientCertificateTypes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="signatureHashAlgorithmsLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="signatureHashAlgorithms" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="distinguishedNamesLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="distinguishedNames" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="certificateRequestContextLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="certificateRequestContext" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clientHelloMessage">
    <xs:complexContent>
      <xs:extension base="helloMessage">
        <xs:sequence>
          <xs:element name="compressionLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="cipherSuiteLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="cipherSuites" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="compressions" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="cookie" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="cookieLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="helloMessage" abstract="true">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="protocolVersion" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="unixTime" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="random" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="sessionIdLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="sessionId" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="helloVerifyRequestMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="protocolVersion" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="cookieLength" type="modifiableByte" minOccurs="0"/>
          <xs:element name="cookie" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dhClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="clientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="computations" type="dhClientComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clientKeyExchangeMessage" abstract="true">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="publicKeyLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="publicKey" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dhClientComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="generator" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="modulus" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="publicKey" type="modifiableBigInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="keyExchangeComputations" abstract="true">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="clientServerRandom" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="premasterSecret" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="privateKey" type="modifiableBigInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="modifiableBigInteger">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="BigIntegerXorModification" type="bigIntegerXorModification"/>
        <xs:element name="BigIntegerSubtractModification" type="bigIntegerSubtractModification"/>
        <xs:element name="BigIntegerShiftRightModification" type="bigIntegerShiftRightModification"/>
        <xs:element name="BigIntegerShiftLeftModification" type="bigIntegerShiftLeftModification"/>
        <xs:element name="BigIntegerExplicitValueModification" type="bigIntegerExplicitValueModification"/>
        <xs:element name="BigIntegerAddModification" type="bigIntegerAddModification"/>
        <xs:element name="BigIntegerInteractiveModification" type="bigIntegerInteractiveModification"/>
        <xs:element name="BigIntegerMultiplyModification" type="bigIntegerMultiplyModification"/>
        <xs:element name="BooleanToggleModification" type="booleanToggleModification"/>
        <xs:element name="BooleanExplicitValueModification" type="booleanExplicitValueModification"/>
        <xs:element name="ByteArrayXorModification" type="byteArrayXorModification"/>
        <xs:element name="ByteArrayShuffleModification" type="byteArrayShuffleModification"/>
        <xs:element name="ByteArrayPayloadModification" type="byteArrayPayloadModification"/>
        <xs:element name="ByteArrayInsertModification" type="byteArrayInsertModification"/>
        <xs:element name="ByteArrayExplicitValueModification" type="byteArrayExplicitValueModification"/>
        <xs:element name="ByteArrayDuplicateModification" type="byteArrayDuplicateModification"/>
        <xs:element name="ByteArrayDeleteModification" type="byteArrayDeleteModification"/>
        <xs:element name="IntegerXorModification" type="integerXorModification"/>
        <xs:element name="IntegerSubtractModification" type="integerSubtractModification"/>
        <xs:element name="IntegerShiftRightModification" type="integerShiftRightModification"/>
        <xs:element name="IntegerShiftLeftModification" type="integerShiftLeftModification"/>
        <xs:element name="IntegerExplicitValueModification" type="integerExplicitValueModification"/>
        <xs:element name="IntegerAddModification" type="integerAddModification"/>
        <xs:element name="LongXorModification" type="longXorModification"/>
        <xs:element name="LongSubtractModification" type="longSubtractModification"/>
        <xs:element name="LongExplicitValueModification" type="longExplicitValueModification"/>
        <xs:element name="LongAddModification" type="longAddModification"/>
        <xs:element name="ByteXorModification" type="byteXorModification"/>
        <xs:element name="ByteSubtractModification" type="byteSubtractModification"/>
        <xs:element name="ByteAddModification" type="byteAddModification"/>
        <xs:element name="ByteExplicitValueModification" type="byteExplicitValueModification"/>
        <xs:element name="StringExplicitValueModification" type="stringExplicitValueModification"/>
      </xs:choice>
      <xs:element name="createRandomModification" type="xs:boolean" minOccurs="0"/>
      <xs:element name="assertEquals" type="xs:anyType" minOccurs="0"/>
      <xs:element name="originalValue" type="xs:integer" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="dheServerKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="serverKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="modulus" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="modulusLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="generator" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="generatorLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="computations" type="dheServerComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverKeyExchangeMessage" abstract="true">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="signatureAndHashAlgorithm" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="signatureLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="signature" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="publicKeyLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="publicKey" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dheServerComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="generator" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="modulus" type="modifiableBigInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ecdhClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="clientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="computations" type="ecdhClientComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ecdhClientComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="publicKeyX" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="publicKeyY" type="modifiableBigInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ecdheServerKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="serverKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="curveType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="namedGroup" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="computations" type="ecdheServerComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ecdheServerComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="ecPointFormat" type="modifiableByte" minOccurs="0"/>
          <xs:element name="namedGroup" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="clientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="computations" type="pskPremasterComputations" minOccurs="0"/>
          <xs:element name="identity" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskPremasterComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="finishedMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="verifyData" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="rsaClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="clientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="computations" type="rsaClientComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="rsaClientComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="padding" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="plainPaddedPremasterSecret" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="premasterSecretProtocolVersion" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="gostClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="clientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="computations" type="gostClientComputations" minOccurs="0"/>
          <xs:element name="keyTransportBlob" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="gostClientComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="clientPublicKeyX" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="clientPublicKeyY" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="maskKey" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="proxyKeyBlobs" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="ukm" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverHelloDoneMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverHelloMessage">
    <xs:complexContent>
      <xs:extension base="helloMessage">
        <xs:sequence>
          <xs:element name="selectedCipherSuite" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="selectedCompressionMethod" type="modifiableByte" minOccurs="0"/>
          <xs:element name="autoSetHelloRetryModeInKeyShare" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="alertMessage">
    <xs:complexContent>
      <xs:extension base="protocolMessage">
        <xs:sequence>
          <xs:element name="config" type="xs:string" minOccurs="0"/>
          <xs:element name="level" type="modifiableByte" minOccurs="0"/>
          <xs:element name="description" type="modifiableByte" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="newSessionTicketMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="ticketLifetimeHint" type="modifiableLong" minOccurs="0"/>
          <xs:element name="ticket" type="sessionTicket" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="modifiableLong">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="BigIntegerXorModification" type="bigIntegerXorModification"/>
        <xs:element name="BigIntegerSubtractModification" type="bigIntegerSubtractModification"/>
        <xs:element name="BigIntegerShiftRightModification" type="bigIntegerShiftRightModification"/>
        <xs:element name="BigIntegerShiftLeftModification" type="bigIntegerShiftLeftModification"/>
        <xs:element name="BigIntegerExplicitValueModification" type="bigIntegerExplicitValueModification"/>
        <xs:element name="BigIntegerAddModification" type="bigIntegerAddModification"/>
        <xs:element name="BigIntegerInteractiveModification" type="bigIntegerInteractiveModification"/>
        <xs:element name="BigIntegerMultiplyModification" type="bigIntegerMultiplyModification"/>
        <xs:element name="BooleanToggleModification" type="booleanToggleModification"/>
        <xs:element name="BooleanExplicitValueModification" type="booleanExplicitValueModification"/>
        <xs:element name="ByteArrayXorModification" type="byteArrayXorModification"/>
        <xs:element name="ByteArrayShuffleModification" type="byteArrayShuffleModification"/>
        <xs:element name="ByteArrayPayloadModification" type="byteArrayPayloadModification"/>
        <xs:element name="ByteArrayInsertModification" type="byteArrayInsertModification"/>
        <xs:element name="ByteArrayExplicitValueModification" type="byteArrayExplicitValueModification"/>
        <xs:element name="ByteArrayDuplicateModification" type="byteArrayDuplicateModification"/>
        <xs:element name="ByteArrayDeleteModification" type="byteArrayDeleteModification"/>
        <xs:element name="IntegerXorModification" type="integerXorModification"/>
        <xs:element name="IntegerSubtractModification" type="integerSubtractModification"/>
        <xs:element name="IntegerShiftRightModification" type="integerShiftRightModification"/>
        <xs:element name="IntegerShiftLeftModification" type="integerShiftLeftModification"/>
        <xs:element name="IntegerExplicitValueModification" type="integerExplicitValueModification"/>
        <xs:element name="IntegerAddModification" type="integerAddModification"/>
        <xs:element name="LongXorModification" type="longXorModification"/>
        <xs:element name="LongSubtractModification" type="longSubtractModification"/>
        <xs:element name="LongExplicitValueModification" type="longExplicitValueModification"/>
        <xs:element name="LongAddModification" type="longAddModification"/>
        <xs:element name="ByteXorModification" type="byteXorModification"/>
        <xs:element name="ByteSubtractModification" type="byteSubtractModification"/>
        <xs:element name="ByteAddModification" type="byteAddModification"/>
        <xs:element name="ByteExplicitValueModification" type="byteExplicitValueModification"/>
        <xs:element name="StringExplicitValueModification" type="stringExplicitValueModification"/>
      </xs:choice>
      <xs:element name="createRandomModification" type="xs:boolean" minOccurs="0"/>
      <xs:element name="assertEquals" type="xs:anyType" minOccurs="0"/>
      <xs:element name="originalValue" type="xs:long" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="keyUpdateMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="requestMode" type="modifiableByte" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="applicationMessage">
    <xs:complexContent>
      <xs:extension base="protocolMessage">
        <xs:sequence>
          <xs:element name="dataConfig" type="xs:string" minOccurs="0"/>
          <xs:element name="data" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeCipherSpecMessage">
    <xs:complexContent>
      <xs:extension base="protocolMessage">
        <xs:sequence>
          <xs:element name="ccsProtocolType" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ssl2ClientHelloMessage">
    <xs:complexContent>
      <xs:extension base="ssl2Message">
        <xs:sequence>
          <xs:element name="protocolVersion" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="cipherSuiteLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="sessionIdLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="challengeLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="cipherSuites" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="sessionId" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="challenge" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ssl2Message" abstract="true">
    <xs:complexContent>
      <xs:extension base="protocolMessage">
        <xs:sequence>
          <xs:element name="messageLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="paddingLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="type" type="modifiableByte" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ssl2ClientMasterKeyMessage">
    <xs:complexContent>
      <xs:extension base="ssl2Message">
        <xs:sequence>
          <xs:element name="cipherKind" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="clearKeyLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="encryptedKeyLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="keyArgLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="clearKeyData" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="encryptedKeyData" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="keyArgData" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="computations" type="rsaClientComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ssl2ServerHelloMessage">
    <xs:complexContent>
      <xs:extension base="ssl2Message">
        <xs:sequence>
          <xs:element name="sessionIdHit" type="modifiableByte" minOccurs="0"/>
          <xs:element name="certificateType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="protocolVersion" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="certificateLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="cipherSuitesLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="sessionIdLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="certificate" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="cipherSuites" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="sessionId" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ssl2ServerVerifyMessage">
    <xs:complexContent>
      <xs:extension base="ssl2Message">
        <xs:sequence>
          <xs:element name="encryptedPart" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="unknownSSL2Message">
    <xs:complexContent>
      <xs:extension base="ssl2Message">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="unknownMessage">
    <xs:complexContent>
      <xs:extension base="protocolMessage">
        <xs:sequence>
          <xs:element name="dataConfig" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="recordContentMessageType" type="protocolMessageType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="unknownHandshakeMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="dataConfig" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="data" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="helloRequestMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="heartbeatMessage">
    <xs:complexContent>
      <xs:extension base="protocolMessage">
        <xs:sequence>
          <xs:element name="heartbeatMessageType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="payloadLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="payload" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="padding" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="supplementalDataMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="entries" type="supplementalDataEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="supplementalDataLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="supplementalDataBytes" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="supplementalDataEntry">
    <xs:sequence>
      <xs:element name="supplementalDataEntry" type="modifiableByteArray" minOccurs="0"/>
      <xs:element name="supplementalDataEntryLength" type="modifiableInteger" minOccurs="0"/>
      <xs:element name="supplementalDataEntryType" type="modifiableInteger" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="encryptedExtensionsMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskDhClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="dhClientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="identity" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskDheServerKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="dheServerKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="identityHint" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityHintLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskEcDhClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="ecdhClientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="identity" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskEcDheServerKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="ecdheServerKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="identityHint" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityHintLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskRsaClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="rsaClientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="identity" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="srpClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="clientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="modulus" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="modulusLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="generator" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="generatorLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="computations" type="srpClientComputations" minOccurs="0"/>
          <xs:element name="salt" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="saltLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="srpClientComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="generator" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="modulus" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="SRPIdentity" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="SRPPassword" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="salt" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="serverPublicKey" type="modifiableBigInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="srpServerKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="serverKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="modulus" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="modulusLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="generator" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="generatorLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="salt" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="saltLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="computations" type="srpServerComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="srpServerComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="generator" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="modulus" type="modifiableBigInteger" minOccurs="0"/>
          <xs:element name="SRPIdentity" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="SRPPassword" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="salt" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="endOfEarlyDataMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pwdServerKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="serverKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="saltLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="salt" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="curveType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="namedGroup" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="elementLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="element" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="scalarLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="scalar" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="computations" type="pwdComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pwdComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence>
          <xs:element name="passwordElement" type="point" minOccurs="0"/>
          <xs:element name="privateKeyScalar" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="point">
    <xs:sequence>
      <xs:choice minOccurs="0">
        <xs:element name="xFieldElementF2m" type="fieldElementF2M"/>
        <xs:element name="xFieldElementFp" type="fieldElementFp"/>
      </xs:choice>
      <xs:choice minOccurs="0">
        <xs:element name="yFieldElementF2m" type="fieldElementF2M"/>
        <xs:element name="yFieldElementFp" type="fieldElementFp"/>
      </xs:choice>
      <xs:element name="infinity" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fieldElementF2M">
    <xs:complexContent>
      <xs:extension base="fieldElement">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fieldElement" abstract="true">
    <xs:sequence>
      <xs:element name="data" type="xs:integer" minOccurs="0"/>
      <xs:element name="modulus" type="xs:integer" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="fieldElementFp">
    <xs:complexContent>
      <xs:extension base="fieldElement">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="rsaServerKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="serverKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="modulus" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="modulusLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="computations" type="rsaServerComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="rsaServerComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pwdClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="clientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="elementLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="element" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="scalarLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="scalar" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="computations" type="pwdComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pskServerKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="serverKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="computations" type="pskPremasterComputations" minOccurs="0"/>
          <xs:element name="identityHint" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="identityHintLength" type="modifiableInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="certificateStatusMessage">
    <xs:complexContent>
      <xs:extension base="handshakeMessage">
        <xs:sequence>
          <xs:element name="certificateStatusType" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="ocspResponseLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="ocspResponseBytes" type="modifiableByteArray" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="emptyClientKeyExchangeMessage">
    <xs:complexContent>
      <xs:extension base="clientKeyExchangeMessage">
        <xs:sequence>
          <xs:element name="computations" type="emptyClientComputations" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="emptyClientComputations">
    <xs:complexContent>
      <xs:extension base="keyExchangeComputations">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="record">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="cleanProtocolMessageBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="completeRecordBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="computations" type="recordCryptoComputations" minOccurs="0"/>
          <xs:element name="connectionId" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="contentMessageType" type="protocolMessageType" minOccurs="0"/>
          <xs:element name="contentType" type="modifiableByte" minOccurs="0"/>
          <xs:element name="epoch" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="length" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="maxRecordLengthConfig" type="xs:int" minOccurs="0"/>
          <xs:element name="protocolMessageBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="protocolVersion" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="sequenceNumber" type="modifiableBigInteger" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="recordCryptoComputations">
    <xs:complexContent>
      <xs:extension base="modifiableVariableHolder">
        <xs:sequence>
          <xs:element name="additionalPaddingLength" type="modifiableInteger" minOccurs="0"/>
          <xs:element name="aeadSalt" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="authenticatedMetaData" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="authenticatedNonMetaData" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="authenticationTag" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="authenticationTagValid" type="xs:boolean" minOccurs="0"/>
          <xs:element name="cbcInitialisationVector" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="cipherKey" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="ciphertext" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="explicitNonce" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="gcmNonce" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="mac" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="macKey" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="macValid" type="xs:boolean" minOccurs="0"/>
          <xs:element name="padding" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="paddingValid" type="xs:boolean" minOccurs="0"/>
          <xs:element name="plainRecordBytes" type="modifiableByteArray" minOccurs="0"/>
          <xs:element name="usedTls13KeySetType" type="tls13KeySetType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="bufferedSendAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeCipherSuiteAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="cipherSuite" minOccurs="0"/>
          <xs:element name="oldValue" type="cipherSuite" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeClientRandomAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="xs:string" minOccurs="0"/>
          <xs:element name="oldValue" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeCompressionAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="compressionMethod" minOccurs="0"/>
          <xs:element name="oldValue" type="compressionMethod" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeContextValueAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="xs:anyType" minOccurs="0"/>
          <xs:element name="newValueList" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="newValue" type="xs:anyType" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="oldValue" type="xs:anyType" minOccurs="0"/>
          <xs:element name="oldValueList" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="fieldName" type="xs:string" minOccurs="0"/>
          <xs:element name="usesList" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="tlsContext">
    <xs:complexContent>
      <xs:extension base="layerContext">
        <xs:sequence>
          <xs:element name="sessionList" type="session" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="keylogfile" type="keylogfile" minOccurs="0"/>
          <xs:element name="handshakeSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="clientHandshakeTrafficSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="serverHandshakeTrafficSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="clientApplicationTrafficSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="serverApplicationTrafficSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="clientEarlyTrafficSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="earlyDataCipherSuite" type="cipherSuite" minOccurs="0"/>
          <xs:element name="earlySecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="pskSets" type="pskSet" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="psk" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="earlyDataPsk" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="earlyDataPSKIdentity" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="selectedIdentityIndex" type="xs:int"/>
          <xs:element name="clientPskKeyExchangeModes" type="pskKeyExchangeMode" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="maxEarlyDataSize" type="xs:int" minOccurs="0"/>
          <xs:element name="masterSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="clearKey" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="preMasterSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="resumptionMasterSecret" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="clientExtendedRandom" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="serverExtendedRandom" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="clientRandom" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="serverRandom" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="selectedCipherSuite" type="cipherSuite" minOccurs="0"/>
          <xs:element name="ssl2CipherSuite" type="ssl2CipherSuite" minOccurs="0"/>
          <xs:element name="selectedCompressionMethod" type="compressionMethod" minOccurs="0"/>
          <xs:element name="serverSessionId" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="clientSessionId" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="ssl2Iv" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="serverCertificate" type="certificate" minOccurs="0"/>
          <xs:element name="clientCertificate" type="certificate" minOccurs="0"/>
          <xs:element name="digest" type="messageDigestCollector" minOccurs="0"/>
          <xs:element name="dtlsCookie" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="extensionCookie" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="selectedProtocolVersion" type="protocolVersion" minOccurs="0"/>
          <xs:element name="highestClientProtocolVersion" type="protocolVersion" minOccurs="0"/>
          <xs:element name="clientSupportedCipherSuites" type="cipherSuite" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="clientSupportedCompressions" type="compressionMethod" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverSupportedSignatureAndHashAlgorithms" type="signatureAndHashAlgorithm" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="clientSupportedSignatureAndHashAlgorithms" type="signatureAndHashAlgorithm" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="clientSupportedCertificateSignAlgorithms" type="signatureAndHashAlgorithm" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverSupportedCertificateSignAlgorithms" type="signatureAndHashAlgorithm" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="heartbeatMode" type="heartbeatMode" minOccurs="0"/>
          <xs:element name="selectedSigHashAlgorithm" type="signatureAndHashAlgorithm" minOccurs="0"/>
          <xs:element name="cachedInfoExtensionClientState" type="xs:boolean"/>
          <xs:element name="cachedInfoExtensionObjects" type="cachedObject" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="statusRequestV2RequestList" type="requestItemV2" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="selectedClientCertificateType" type="certificateType" minOccurs="0"/>
          <xs:element name="selectedServerCertificateType" type="certificateType" minOccurs="0"/>
          <xs:element name="paddingExtensionBytes" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="renegotiationInfo" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="certificateRequestContext" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="signedCertificateTimestamp" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="certificateStatusRequestExtensionRequestType" type="certificateStatusRequestType" minOccurs="0"/>
          <xs:element name="certificateStatusRequestExtensionResponderIDList" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="certificateStatusRequestExtensionRequestExtension" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="secureRemotePasswordExtensionIdentifier" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="secureRealTimeTransportProtocolProtectionProfiles" type="srtpProtectionProfiles" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="secureRealTimeProtocolMasterKeyIdentifier" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="userMappingExtensionHintType" type="userMappingExtensionHintType" minOccurs="0"/>
          <xs:element name="clientAuthzDataFormatList" type="authzDataFormat" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverAuthzDataFormatList" type="authzDataFormat" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverDhGenerator" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverDhModulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDhGenerator" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDhModulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverDhPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverDhPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDhPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDhPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="srpModulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="pskModulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverPSKPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverPSKPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="pskGenerator" type="xs:integer" minOccurs="0"/>
          <xs:element name="srpGenerator" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverSRPPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverSRPPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientSRPPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientSRPPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="srpServerSalt" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="srpPassword" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="srpIdentity" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="pskKey" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="pskIdentity" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="pskIdentityHint" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="selectedGroup" type="namedGroup" minOccurs="0"/>
          <xs:element name="ecCertificateCurve" type="namedGroup" minOccurs="0"/>
          <xs:element name="ecCertificateSignatureCurve" type="namedGroup" minOccurs="0"/>
          <xs:element name="clientEcPublicKey" type="point" minOccurs="0"/>
          <xs:element name="serverEcPublicKey" type="point" minOccurs="0"/>
          <xs:element name="serverEcPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientEcPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientRsaModulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverRSAModulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverRSAPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientRSAPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverRSAPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientRSAPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDsaPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverDsaPrivateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverDsaPrimeP" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverDsaPrimeQ" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverDsaGenerator" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverDsaPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDsaPublicKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDsaPrimeP" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDsaPrimeQ" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientDsaGenerator" type="xs:integer" minOccurs="0"/>
          <xs:element name="clientNamedGroupsList" type="namedGroup" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverNamedGroupsList" type="namedGroup" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="clientPointFormatsList" type="ecPointFormat" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverPointFormatsList" type="ecPointFormat" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="receivedFatalAlert" type="xs:boolean"/>
          <xs:element name="receivedMessageWithWrongTls13KeyType" type="xs:boolean"/>
          <xs:element name="clientCertificateTypes" type="clientCertificateType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="distinguishedNames" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="lastRecordVersion" type="protocolVersion" minOccurs="0"/>
          <xs:element name="clientSNIEntryList" type="sniEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="clientKeyShareStoreEntryList" type="keyShareStoreEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverKeyShareStoreEntry" type="keyShareStoreEntry" minOccurs="0"/>
          <xs:element name="selectedGostCurve" type="gostCurve" minOccurs="0"/>
          <xs:element name="activeClientKeySetType" type="tls13KeySetType" minOccurs="0"/>
          <xs:element name="activeServerKeySetType" type="tls13KeySetType" minOccurs="0"/>
          <xs:element name="dtlsReceivedHandshakeMessageSequences" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="dtlsReceivedChangeCipherSpecEpochs" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="clientSupportedProtocolVersions" type="protocolVersion" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="tokenBindingVersion" type="tokenBindingVersion" minOccurs="0"/>
          <xs:element name="tokenBindingKeyParameters" type="tokenBindingKeyParameters" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="tokenBindingNegotiatedSuccessfully" type="xs:boolean"/>
          <xs:element name="proposedAlpnProtocols" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="selectedAlpnProtocol" type="xs:string" minOccurs="0"/>
          <xs:element name="certificateTypeClientDesiredTypes" type="certificateType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverCertificateTypeDesiredTypes" type="certificateType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="clientCertificateTypeDesiredTypes" type="certificateType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="trustedCaIndicationExtensionCas" type="trustedAuthority" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="selectedSignatureAndHashAlgorithm" type="signatureAndHashAlgorithm" minOccurs="0"/>
          <xs:element name="prfAlgorithm" type="prfAlgorithm" minOccurs="0"/>
          <xs:element name="highestProtocolVersion" type="protocolVersion" minOccurs="0"/>
          <xs:element name="clientAuthentication" type="xs:boolean" minOccurs="0"/>
          <xs:element name="clientPWDUsername" type="xs:string" minOccurs="0"/>
          <xs:element name="serverPWDSalt" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="pwdpe" type="point" minOccurs="0"/>
          <xs:element name="clientPWDPrivate" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverPWDPrivate" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverPWDScalar" type="xs:integer" minOccurs="0"/>
          <xs:element name="serverPWDElement" type="point" minOccurs="0"/>
          <xs:element name="lastHandledApplicationMessageData" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="lastClientVerifyData" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="lastServerVerifyData" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="lastClientHello" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="random" type="random" minOccurs="0"/>
          <xs:element name="messageBuffer" type="protocolMessage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="recordBuffer" type="record" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="fragmentBuffer" type="dtlsHandshakeMessageFragment" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="chooser" type="chooser" minOccurs="0"/>
          <xs:element name="proposedExtensionSet" type="extensionType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="negotiatedExtensionSet" type="extensionType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="secureRenegotiation" type="xs:boolean"/>
          <xs:element name="useExtendedMasterSecret" type="xs:boolean"/>
          <xs:element name="receivedTransportHandlerException" type="xs:boolean"/>
          <xs:element name="reversePrepareAfterParse" type="xs:boolean"/>
          <xs:element name="esniClientNonce" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="esniServerNonce" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="esniRecordBytes" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="esniRecordVersion" type="esniDnsKeyRecordVersion" minOccurs="0"/>
          <xs:element name="esniRecordChecksum" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="esniServerKeyShareEntries" type="keyShareStoreEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="esniServerCipherSuites" type="cipherSuite" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="esniPaddedLength" type="xs:int" minOccurs="0"/>
          <xs:element name="esniNotBefore" type="xs:long" minOccurs="0"/>
          <xs:element name="esniNotAfter" type="xs:long" minOccurs="0"/>
          <xs:element name="esniExtensions" type="extensionType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="maxFragmentLength" type="maxFragmentLength" minOccurs="0"/>
          <xs:element name="outboundRecordSizeLimit" type="xs:int" minOccurs="0"/>
          <xs:element name="writeConnectionId" type="xs:base64Binary" minOccurs="0"/>
          <xs:element name="readConnectionID" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="layerContext" abstract="true">
    <xs:sequence>
      <xs:element name="connection" type="aliasedConnection" minOccurs="0"/>
      <xs:element name="context" type="context" minOccurs="0"/>
      <xs:element name="talkingConnectionEndType" type="connectionEndType" minOccurs="0"/>
      <xs:element name="transportHandler" type="transportHandler" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="session" abstract="true">
    <xs:sequence>
      <xs:element name="masterSecret" type="xs:base64Binary" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="keylogfile">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="pskSet">
    <xs:sequence>
      <xs:element name="preSharedKeyIdentity" type="xs:string" minOccurs="0"/>
      <xs:element name="preSharedKey" type="xs:string" minOccurs="0"/>
      <xs:element name="ticketAge" type="xs:string" minOccurs="0"/>
      <xs:element name="ticketAgeAdd" type="xs:string" minOccurs="0"/>
      <xs:element name="ticketNonce" type="xs:string" minOccurs="0"/>
      <xs:element name="cipherSuite" type="cipherSuite" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="certificate">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="messageDigestCollector">
    <xs:sequence>
      <xs:element name="rawBytes" type="xs:base64Binary" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sniEntry">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="type" type="nameType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="keyShareStoreEntry">
    <xs:sequence>
      <xs:element name="group" type="namedGroup" minOccurs="0"/>
      <xs:element name="publicKey" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="random">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="chooser" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="context">
    <xs:sequence>
      <xs:element name="chooser" type="chooser" minOccurs="0"/>
      <xs:element ref="config" minOccurs="0"/>
      <xs:element name="transportHandler" type="transportHandler" minOccurs="0"/>
      <xs:element name="tcpContext" type="tcpContext" minOccurs="0"/>
      <xs:element name="httpContext" type="httpContext" minOccurs="0"/>
      <xs:element name="tlsContext" type="tlsContext" minOccurs="0"/>
      <xs:element name="layerStack" type="layerStack" minOccurs="0"/>
      <xs:element name="talkingConnectionEndType" type="connectionEndType" minOccurs="0"/>
      <xs:element name="connection" type="aliasedConnection" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="config">
    <xs:all>
      <xs:element name="defaultLayerConfiguration" type="layerConfiguration" minOccurs="0"/>
      <xs:element name="defaultHandshakeSecret" type="xs:string" minOccurs="0"/>
      <xs:element name="preferredCertificateSignatureType" type="certificateKeyType" minOccurs="0"/>
      <xs:element name="preferredCertificateSignatureGroup" type="namedGroup" minOccurs="0"/>
      <xs:element name="autoSelectCertificate" type="xs:boolean" minOccurs="0"/>
      <xs:element name="defaultExplicitCertificateKeyPair" type="certificateKeyPair" minOccurs="0"/>
      <xs:element name="autoAdjustSignatureAndHashAlgorithm" type="xs:boolean" minOccurs="0"/>
      <xs:element name="preferredHashAlgorithm" type="hashAlgorithm" minOccurs="0"/>
      <xs:element name="outputFilters" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="outputFilter" type="filterType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="applyFiltersInPlace" type="xs:boolean" minOccurs="0"/>
      <xs:element name="filtersKeepUserSettings" type="xs:boolean" minOccurs="0"/>
      <xs:element name="reorderReceivedDtlsRecords" type="xs:boolean" minOccurs="0"/>
      <xs:element name="highestProtocolVersion" type="protocolVersion" minOccurs="0"/>
      <xs:element name="defaultClientConnection" type="outboundConnection" minOccurs="0"/>
      <xs:element name="receiveFinalTcpSocketStateWithTimeout" type="xs:boolean" minOccurs="0"/>
      <xs:element name="retryFailedClientTcpSocketInitialization" type="xs:boolean" minOccurs="0"/>
      <xs:element name="networkInterface" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerConnection" type="inboundConnection" minOccurs="0"/>
      <xs:element name="defaultRunningMode" type="runningModeType" minOccurs="0"/>
      <xs:element name="dtlsCookieExchange" type="xs:boolean" minOccurs="0"/>
      <xs:element name="clientAuthentication" type="xs:boolean" minOccurs="0"/>
      <xs:element name="defaultClientSupportedSignatureAndHashAlgorithms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultClientSupportedSignatureAndHashAlgorithm" type="signatureAndHashAlgorithm" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultClientSupportedCertificateSignAlgorithms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultClientSupportedCertificateSignAlgorithms" type="signatureAndHashAlgorithm" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultClientSupportedCipherSuites" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultClientSupportedCipherSuite" type="cipherSuite" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultServerSupportedCipherSuites" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultServerSupportedCipherSuite" type="cipherSuite" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultServerSupportedSSL2CipherSuites" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultServerSupportedSSL2CipherSuite" type="ssl2CipherSuite" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultClientNamedGroups" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultClientNamedGroup" type="namedGroup" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultServerNamedGroups" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultServerNamedGroup" type="namedGroup" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="supportedVersions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="supportedVersion" type="protocolVersion" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="heartbeatMode" type="heartbeatMode" minOccurs="0"/>
      <xs:element name="defaultAdditionalPadding" type="xs:int" minOccurs="0"/>
      <xs:element name="defaultSniHostnames" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultSniHostname" type="serverNamePair" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultSelectedNamedGroup" type="namedGroup" minOccurs="0"/>
      <xs:element name="defaultKeySharePrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientKeyShareNamedGroups" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultClientKeyShareNamedGroup" type="namedGroup" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultClientKeyStoreEntries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultClientKeyStoreEntry" type="keyShareStoreEntry" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultServerKeyShareEntry" type="keyShareStoreEntry" minOccurs="0"/>
      <xs:element name="sniType" type="nameType" minOccurs="0"/>
      <xs:element name="preferredCertRsaKeySize" type="xs:int" minOccurs="0"/>
      <xs:element name="prefferedCertDssKeySize" type="xs:int" minOccurs="0"/>
      <xs:element name="defaultKeyUpdateRequestMode" type="keyUpdateRequest" minOccurs="0"/>
      <xs:element name="encryptChangeCipherSpecTls13" type="xs:boolean" minOccurs="0"/>
      <xs:element name="tlsSessionTicket" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientRenegotiationInfo" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerRenegotiationInfo" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultSignedCertificateTimestamp" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultTokenBindingVersion" type="tokenBindingVersion" minOccurs="0"/>
      <xs:element name="defaultTokenBindingKeyParameters" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultTokenBindingKeyParameter" type="tokenBindingKeyParameters" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="certificateStatusRequestExtensionRequestType" type="certificateStatusRequestType" minOccurs="0"/>
      <xs:element name="certificateStatusRequestExtensionResponderIDList" type="xs:string" minOccurs="0"/>
      <xs:element name="certificateStatusRequestExtensionRequestExtension" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultProposedAlpnProtocols" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultProposedAlpnProtocol" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultSelectedAlpnProtocol" type="xs:string" minOccurs="0"/>
      <xs:element name="secureRemotePasswordExtensionIdentifier" type="xs:string" minOccurs="0"/>
      <xs:element name="secureRealTimeTransportProtocolProtectionProfiles" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="secureRealTimeTransportProtocolProtectionProfile" type="srtpProtectionProfiles" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="secureRealTimeTransportProtocolMasterKeyIdentifier" type="xs:string" minOccurs="0"/>
      <xs:element name="userMappingExtensionHintType" type="userMappingExtensionHintType" minOccurs="0"/>
      <xs:element name="certificateTypeDesiredTypes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="certificateTypeDesiredType" type="certificateType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clientCertificateTypeDesiredTypes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="clientCertificateTypeDesiredType" type="certificateType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="serverCertificateTypeDesiredTypes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="serverCertificateTypeDesiredType" type="certificateType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clientAuthzExtensionDataFormat" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="clientAuthzExtensionDataFormat" type="authzDataFormat" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="certificateTypeExtensionMessageState" type="xs:boolean" minOccurs="0"/>
      <xs:element name="serverAuthzExtensionDataFormat" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="serverAuthzExtensionDataFormat" type="authzDataFormat" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="trustedCaIndicationExtensionAuthorities" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="trustedCaIndicationExtensionAuthority" type="trustedAuthority" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clientCertificateTypeExtensionMessageState" type="xs:boolean" minOccurs="0"/>
      <xs:element name="cachedInfoExtensionIsClientState" type="xs:boolean" minOccurs="0"/>
      <xs:element name="cachedObjectList" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="cachedObject" type="cachedObject" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="statusRequestV2RequestList" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="statusRequestV2Request" type="requestItemV2" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="workflowTraceType" type="workflowTraceType" minOccurs="0"/>
      <xs:element name="serverSendsApplicationData" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addExtensionsInSSL" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addECPointFormatExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addEllipticCurveExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addHeartbeatExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addMaxFragmentLengthExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addRecordSizeLimitExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addServerNameIndicationExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addSignatureAndHashAlgorithmsExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addSignatureAlgorithmsCertExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addSupportedVersionsExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addKeyShareExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addEarlyDataExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="defaultMaxEarlyDataSize" type="xs:int" minOccurs="0"/>
      <xs:element name="addEncryptedServerNameIndicationExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addPWDClearExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addPWDProtectExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addPSKKeyExchangeModesExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addPreSharedKeyExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addPaddingExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addExtendedMasterSecretExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addSessionTicketTLSExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addExtendedRandomExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addSignedCertificateTimestampExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addRenegotiationInfoExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addTokenBindingExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addHttpCookie" type="xs:boolean" minOccurs="0"/>
      <xs:element name="defaultHttpCookieName" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultHttpCookieValue" type="xs:string" minOccurs="0"/>
      <xs:element name="addCertificateStatusRequestExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addAlpnExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addSRPExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addSRTPExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addTruncatedHmacExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addUserMappingExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addCertificateTypeExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addClientAuthzExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addServerAuthzExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addClientCertificateTypeExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addServerCertificateTypeExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addEncryptThenMacExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addCachedInfoExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addClientCertificateUrlExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addTrustedCaIndicationExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addCertificateStatusRequestV2Extension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addCookieExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="defaultConnectionId" type="xs:string" minOccurs="0"/>
      <xs:element name="addConnectionIdExtension" type="xs:boolean" minOccurs="0"/>
      <xs:element name="pskKeyExchangeModes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="pskKeyExchangeMode" type="pskKeyExchangeMode" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="psk" type="xs:string" minOccurs="0"/>
      <xs:element name="clientEarlyTrafficSecret" type="xs:string" minOccurs="0"/>
      <xs:element name="earlySecret" type="xs:string" minOccurs="0"/>
      <xs:element name="earlyDataCipherSuite" type="cipherSuite" minOccurs="0"/>
      <xs:element name="earlyDataPsk" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultPskSets" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultPskSet" type="pskSet" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="limitPsksToOne" type="xs:boolean" minOccurs="0"/>
      <xs:element name="preserveMessageRecordRelation" type="xs:boolean" minOccurs="0"/>
      <xs:element name="usePsk" type="xs:boolean" minOccurs="0"/>
      <xs:element name="earlyData" type="xs:string" minOccurs="0"/>
      <xs:element name="distinguishedNames" type="xs:string" minOccurs="0"/>
      <xs:element name="enforceSettings" type="xs:boolean" minOccurs="0"/>
      <xs:element name="receiveMaximumBytes" type="xs:int" minOccurs="0"/>
      <xs:element name="stealthMode" type="xs:boolean" minOccurs="0"/>
      <xs:element name="stopActionsAfterIOException" type="xs:boolean" minOccurs="0"/>
      <xs:element name="stopTraceAfterUnexpected" type="xs:boolean" minOccurs="0"/>
      <xs:element name="messageFactoryActionOptions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="messageFactoryActionOption" type="actionOption" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultServerDhGenerator" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDhModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDhGenerator" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDhModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDhPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDhPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDhPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDhPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDsaPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDsaPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDsaPrimeP" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDsaPrimeQ" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDsaGenerator" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDsaPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDsaPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDsaPrimeP" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDsaPrimeQ" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientDsaGenerator" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultSelectedGostCurve" type="gostCurve" minOccurs="0"/>
      <xs:element name="defaultApplicationMessageData" type="xs:string" minOccurs="0"/>
      <xs:element name="clientCertificateTypes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="clientCertificateType" type="clientCertificateType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="heartbeatPayloadLength" type="xs:int" minOccurs="0"/>
      <xs:element name="heartbeatPaddingLength" type="xs:int" minOccurs="0"/>
      <xs:element name="defaultPaddingExtensionBytes" type="xs:string" minOccurs="0"/>
      <xs:element name="dtlsDefaultCookieLength" type="xs:int" minOccurs="0"/>
      <xs:element name="dtlsMaximumFragmentLength" type="xs:int" minOccurs="0"/>
      <xs:element name="workflowExecutorType" type="workflowExecutorType" minOccurs="0"/>
      <xs:element name="flushOnMessageTypeChange" type="xs:boolean" minOccurs="0"/>
      <xs:element name="createFragmentsDynamically" type="xs:boolean" minOccurs="0"/>
      <xs:element name="createRecordsDynamically" type="xs:boolean" minOccurs="0"/>
      <xs:element name="createIndividualTransportPackets" type="xs:boolean" minOccurs="0"/>
      <xs:element name="individualTransportPacketCooldown" type="xs:int" minOccurs="0"/>
      <xs:element name="resetWorkflowTracesBeforeSaving" type="xs:boolean" minOccurs="0"/>
      <xs:element name="workflowExecutorShouldOpen" type="xs:boolean" minOccurs="0"/>
      <xs:element name="stopReceivingAfterFatal" type="xs:boolean" minOccurs="0"/>
      <xs:element name="workflowExecutorShouldClose" type="xs:boolean" minOccurs="0"/>
      <xs:element name="stopActionsAfterFatal" type="xs:boolean" minOccurs="0"/>
      <xs:element name="finishWithCloseNotify" type="xs:boolean" minOccurs="0"/>
      <xs:element name="ignoreRetransmittedCcsInDtls" type="xs:boolean" minOccurs="0"/>
      <xs:element name="addRetransmissionsToWorkflowTraceInDtls" type="xs:boolean" minOccurs="0"/>
      <xs:element name="maxDtlsRetransmissions" type="xs:int" minOccurs="0"/>
      <xs:element name="stopActionsAfterWarning" type="xs:boolean" minOccurs="0"/>
      <xs:element name="defaultSelectedCipherSuite" type="cipherSuite" minOccurs="0"/>
      <xs:element name="defaultSelectedServerCertificateType" type="certificateType" minOccurs="0"/>
      <xs:element name="defaultSelectedClientCertificateType" type="certificateType" minOccurs="0"/>
      <xs:element name="defaultSSL2CipherSuite" type="ssl2CipherSuite" minOccurs="0"/>
      <xs:element name="defaultServerSupportedPointFormats" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultServerSupportedPointFormat" type="ecPointFormat" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultClientSupportedPointFormats" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultClientSupportedPointFormat" type="ecPointFormat" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultServerSupportedSignatureAndHashAlgorithms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultServerSupportedSignatureAndHashAlgorithm" type="signatureAndHashAlgorithm" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultServerSupportedCertificateSignAlgorithms" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultServerSupportedCertificateSignAlgorithms" type="signatureAndHashAlgorithm" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultSelectedSignatureAndHashAlgorithm" type="signatureAndHashAlgorithm" minOccurs="0"/>
      <xs:element name="defaultSelectedSignatureAlgorithmCert" type="signatureAndHashAlgorithm" minOccurs="0"/>
      <xs:element name="defaultLastRecordProtocolVersion" type="protocolVersion" minOccurs="0"/>
      <xs:element name="defaultSelectedProtocolVersion" type="protocolVersion" minOccurs="0"/>
      <xs:element name="defaultHighestClientProtocolVersion" type="protocolVersion" minOccurs="0"/>
      <xs:element name="defaultMaxFragmentLength" type="maxFragmentLength" minOccurs="0"/>
      <xs:element name="defaultMaxRecordData" type="xs:int" minOccurs="0"/>
      <xs:element name="enforcedMaxRecordData" type="xs:int" minOccurs="0"/>
      <xs:element name="inboundRecordSizeLimit" type="xs:int" minOccurs="0"/>
      <xs:element name="defaultHeartbeatMode" type="heartbeatMode" minOccurs="0"/>
      <xs:element name="defaultClientSupportedCompressionMethods" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultClientSupportedCompressionMethod" type="compressionMethod" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultServerSupportedCompressionMethods" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultServerSupportedCompressionMethod" type="compressionMethod" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultMasterSecret" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultPreMasterSecret" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientExtendedRandom" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerExtendedRandom" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientRandom" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerRandom" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientSessionId" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientTicketResumptionSessionId" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerSessionId" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultSelectedCompressionMethod" type="compressionMethod" minOccurs="0"/>
      <xs:element name="dtlsDefaultCookie" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultExtensionCookie" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultCertificateRequestContext" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultPRFAlgorithm" type="prfAlgorithm" minOccurs="0"/>
      <xs:element name="defaultAlertDescription" type="alertDescription" minOccurs="0"/>
      <xs:element name="defaultAlertLevel" type="alertLevel" minOccurs="0"/>
      <xs:element name="defaultEcCertificateCurve" type="namedGroup" minOccurs="0"/>
      <xs:element name="defaultClientEcPublicKey" type="point" minOccurs="0"/>
      <xs:element name="defaultServerEcPublicKey" type="point" minOccurs="0"/>
      <xs:element name="defaultServerEcPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientEcPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerRSAModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientRSAModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerRSAPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientRSAPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerRSAPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultClientRSAPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultPSKKey" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultPSKIdentity" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultPSKIdentityHint" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultSRPModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultPSKModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultPSKGenerator" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultPskDhServerPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultPskDhServerPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultSRPGenerator" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultSRPServerPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultSRPClientPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultSRPServerPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultSRPClientPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultSRPServerSalt" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultSRPIdentity" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultSRPPassword" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientHandshakeTrafficSecret" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerHandshakeTrafficSecret" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientApplicationTrafficSecret" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerApplicationTrafficSecret" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerRSAExportModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerRSAExportPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerRSAExportPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDhExportGenerator" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDhExportModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDhExportPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerDhExportPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultTokenBindingType" type="tokenBindingType" minOccurs="0"/>
      <xs:element name="defaultTokenBindingECPublicKey" type="point" minOccurs="0"/>
      <xs:element name="defaultTokenBindingRsaPublicKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultTokenBindingRsaPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultTokenBindingEcPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultTokenBindingRsaModulus" type="xs:integer" minOccurs="0"/>
      <xs:element name="useFreshRandom" type="xs:boolean" minOccurs="0"/>
      <xs:element name="chooserType" type="chooserType" minOccurs="0"/>
      <xs:element name="useAllProvidedDtlsFragments" type="xs:boolean" minOccurs="0"/>
      <xs:element name="useAllProvidedRecords" type="xs:boolean" minOccurs="0"/>
      <xs:element name="defaultHttpsLocationPath" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultHttpsRequestPath" type="xs:string" minOccurs="0"/>
      <xs:element name="starttlsType" type="starttlsType" minOccurs="0"/>
      <xs:element name="overrideSessionIdForTickets" type="xs:boolean" minOccurs="0"/>
      <xs:element name="sessionTicketLifetimeHint" type="xs:long" minOccurs="0"/>
      <xs:element name="sessionTicketEncryptionKey" type="xs:string" minOccurs="0"/>
      <xs:element name="sessionTicketKeyHMAC" type="xs:string" minOccurs="0"/>
      <xs:element name="sessionTicketKeyName" type="xs:string" minOccurs="0"/>
      <xs:element name="sessionTicketCipherAlgorithm" type="cipherAlgorithm" minOccurs="0"/>
      <xs:element name="sessionTicketMacAlgorithm" type="macAlgorithm" minOccurs="0"/>
      <xs:element name="defaultSessionTicketAgeAdd" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultSessionTicketNonce" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultSessionTicketIdentity" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultLastClientHello" type="xs:string" minOccurs="0"/>
      <xs:element name="clientAuthenticationType" type="clientAuthenticationType" minOccurs="0"/>
      <xs:element name="tls13BackwardsCompatibilityMode" type="xs:boolean" minOccurs="0"/>
      <xs:element name="defaultClientPWDUsername" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultPWDProtectGroup" type="namedGroup" minOccurs="0"/>
      <xs:element name="defaultServerPWDProtectPublicKey" type="point" minOccurs="0"/>
      <xs:element name="defaultServerPWDProtectPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultServerPWDProtectRandomSecret" type="xs:integer" minOccurs="0"/>
      <xs:element name="defaultPWDPassword" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultPWDIterations" type="xs:int" minOccurs="0"/>
      <xs:element name="defaultServerPWDPrivate" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerPWDMask" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientPWDPrivate" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultClientPWDMask" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultServerPWDSalt" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultSelectedPointFormat" type="ecPointFormat" minOccurs="0"/>
      <xs:element name="defaultEsniClientPrivateKey" type="xs:integer" minOccurs="0"/>
      <xs:element name="clientSupportedEsniCipherSuites" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="clientSupportedEsniCipherSuite" type="cipherSuite" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="clientSupportedEsniNamedGroups" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="clientSupportedEsniNamedGroup" type="namedGroup" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="esniServerKeyPairs" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="esniServerKeyPair" type="keyShareEntry" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultEsniClientNonce" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultEsniServerNonce" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultEsniRecordBytes" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultEsniRecordVersion" type="esniDnsKeyRecordVersion" minOccurs="0"/>
      <xs:element name="defaultEsniRecordChecksum" type="xs:string" minOccurs="0"/>
      <xs:element name="defaultEsniServerKeyShareEntries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultEsniServerKeyShareEntry" type="keyShareStoreEntry" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultEsniServerCipherSuites" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultEsniServerCipherSuite" type="cipherSuite" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="defaultEsniPaddedLength" type="xs:int" minOccurs="0"/>
      <xs:element name="defaultEsniNotBefore" type="xs:long" minOccurs="0"/>
      <xs:element name="defaultEsniNotAfter" type="xs:long" minOccurs="0"/>
      <xs:element name="defaultEsniExtensions" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="defaultEsniExtension" type="extensionType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="acceptOnlyFittingDtlsFragments" type="xs:boolean" minOccurs="0"/>
      <xs:element name="acceptContentRewritingDtlsFragments" type="xs:boolean" minOccurs="0"/>
      <xs:element name="writeKeylogFile" type="xs:boolean" minOccurs="0"/>
      <xs:element name="keylogFilePath" type="xs:string" minOccurs="0"/>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="certificateKeyPair">
    <xs:sequence>
      <xs:element name="certPublicKeyType" type="certificateKeyType" minOccurs="0"/>
      <xs:element name="certSignatureType" type="certificateKeyType" minOccurs="0"/>
      <xs:element name="signatureAndHashAlgorithm" type="signatureAndHashAlgorithm" minOccurs="0"/>
      <xs:element name="gostCurve" type="gostCurve" minOccurs="0"/>
      <xs:element name="certificateBytes" type="xs:string" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:element name="DhPublicKey" type="customDhPublicKey"/>
        <xs:element name="DsaPublicKey" type="customDsaPublicKey"/>
        <xs:element name="RsaPublicKey" type="customRsaPublicKey"/>
        <xs:element name="EcPublicKey" type="customEcPublicKey"/>
      </xs:choice>
      <xs:choice minOccurs="0">
        <xs:element name="DhPrivateKey" type="customDHPrivateKey"/>
        <xs:element name="DsaPrivateKey" type="customDSAPrivateKey"/>
        <xs:element name="RsaPrivateKey" type="customRSAPrivateKey"/>
        <xs:element name="EcPrivateKey" type="customECPrivateKey"/>
      </xs:choice>
      <xs:element name="signatureGroup" type="namedGroup" minOccurs="0"/>
      <xs:element name="publicKeyGroup" type="namedGroup" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="customDhPublicKey">
    <xs:complexContent>
      <xs:extension base="customPublicKey">
        <xs:sequence>
          <xs:element name="modulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="generator" type="xs:integer" minOccurs="0"/>
          <xs:element name="publicKey" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="customPublicKey" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="customDsaPublicKey">
    <xs:complexContent>
      <xs:extension base="customPublicKey">
        <xs:sequence>
          <xs:element name="dsaP" type="xs:integer" minOccurs="0"/>
          <xs:element name="dsaQ" type="xs:integer" minOccurs="0"/>
          <xs:element name="dsaG" type="xs:integer" minOccurs="0"/>
          <xs:element name="publicKey" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="customRsaPublicKey">
    <xs:complexContent>
      <xs:extension base="customPublicKey">
        <xs:sequence>
          <xs:element name="publicExponent" type="xs:integer" minOccurs="0"/>
          <xs:element name="modulus" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="customEcPublicKey">
    <xs:complexContent>
      <xs:extension base="customPublicKey">
        <xs:sequence>
          <xs:element ref="point" minOccurs="0"/>
          <xs:element name="group" type="namedGroup" minOccurs="0"/>
          <xs:element name="gostCurve" type="gostCurve" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="customDHPrivateKey">
    <xs:complexContent>
      <xs:extension base="customPrivateKey">
        <xs:sequence>
          <xs:element name="privateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="modulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="generator" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="customPrivateKey" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="customDSAPrivateKey">
    <xs:complexContent>
      <xs:extension base="customPrivateKey">
        <xs:sequence>
          <xs:element name="privateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="primeP" type="xs:integer" minOccurs="0"/>
          <xs:element name="primeQ" type="xs:integer" minOccurs="0"/>
          <xs:element name="generator" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="customRSAPrivateKey">
    <xs:complexContent>
      <xs:extension base="customPrivateKey">
        <xs:sequence>
          <xs:element name="modulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="privateExponent" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="customECPrivateKey">
    <xs:complexContent>
      <xs:extension base="customPrivateKey">
        <xs:sequence>
          <xs:element name="privateKey" type="xs:integer" minOccurs="0"/>
          <xs:element name="group" type="namedGroup" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="transportHandler" abstract="true">
    <xs:sequence>
      <xs:element name="timeout" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="tcpContext">
    <xs:complexContent>
      <xs:extension base="layerContext">
        <xs:sequence>
          <xs:element name="finalSocketState" type="socketState" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="httpContext">
    <xs:complexContent>
      <xs:extension base="layerContext">
        <xs:sequence>
          <xs:element name="httpCookieName" type="xs:string" minOccurs="0"/>
          <xs:element name="httpCookieValue" type="xs:string" minOccurs="0"/>
          <xs:element name="lastRequestPath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="layerStack">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="changeMasterSecretAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="xs:string" minOccurs="0"/>
          <xs:element name="oldValue" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changePreMasterSecretAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="xs:string" minOccurs="0"/>
          <xs:element name="oldValue" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeServerRsaParametersAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="modulus" type="xs:integer" minOccurs="0"/>
          <xs:element name="publicExponent" type="xs:integer" minOccurs="0"/>
          <xs:element name="privateExponent" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeDefaultPreMasterSecretAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="xs:string" minOccurs="0"/>
          <xs:element name="oldValue" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeProtocolVersionAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="protocolVersion" minOccurs="0"/>
          <xs:element name="oldValue" type="protocolVersion" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeServerRandomAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="xs:string" minOccurs="0"/>
          <xs:element name="oldValue" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeConnectionTimeoutAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="newValue" type="xs:long"/>
          <xs:element name="oldValue" type="xs:long"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeReadEpochAction">
    <xs:complexContent>
      <xs:extension base="changeEpochAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeEpochAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="epoch" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeReadSequenceNumberAction">
    <xs:complexContent>
      <xs:extension base="changeSequenceNumberAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeSequenceNumberAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="sequenceNumber" type="xs:long" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeWriteEpochAction">
    <xs:complexContent>
      <xs:extension base="changeEpochAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="changeWriteSequenceNumberAction">
    <xs:complexContent>
      <xs:extension base="changeSequenceNumberAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clearBuffersAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="clearDigestAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="copyBufferedMessagesAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="copyContextFieldAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="tlsAction">
        <xs:sequence>
          <xs:element name="from" type="xs:string" minOccurs="0"/>
          <xs:element name="to" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="copyBufferedRecordsAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="copyBuffersAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="copyClientRandomAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="copyPreMasterSecretAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="copyServerRandomAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="deactivateDecryptionAction">
    <xs:complexContent>
      <xs:extension base="deactivateCryptoAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="deactivateCryptoAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="deactivateEncryptionAction">
    <xs:complexContent>
      <xs:extension base="deactivateCryptoAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="deepCopyBufferedMessagesAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="deepCopyBufferedRecordsAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="deepCopyBuffersAction">
    <xs:complexContent>
      <xs:extension base="copyContextFieldAction">
        <xs:sequence>
          <xs:element name="state" type="state" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="state">
    <xs:sequence>
      <xs:element name="endTimestamp" type="xs:long"/>
      <xs:element name="executionException" type="throwable" minOccurs="0"/>
      <xs:element name="runningMode" type="runningModeType" minOccurs="0"/>
      <xs:element name="startTimestamp" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="throwable">
    <xs:sequence>
      <xs:element name="stackTrace" type="stackTraceElement" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="stackTraceElement" final="extension restriction">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="esniKeyDnsRequestAction">
    <xs:complexContent>
      <xs:extension base="tlsAction">
        <xs:sequence>
          <xs:element name="extensions" type="extensionMessage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="findReceivedProtocolMessageAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="protocolMessageType" type="protocolMessageType" minOccurs="0"/>
          <xs:element name="found" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="forwardMessagesAction">
    <xs:complexContent>
      <xs:extension base="tlsAction">
        <xs:sequence>
          <xs:element name="from" type="xs:string" minOccurs="0"/>
          <xs:element name="to" type="xs:string" minOccurs="0"/>
          <xs:element name="receivedMessages" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element ref="Certificate"/>
                  <xs:element ref="DtlsHandshakeMessageFragment"/>
                  <xs:element ref="CertificateVerify"/>
                  <xs:element ref="CertificateRequest"/>
                  <xs:element ref="ClientHello"/>
                  <xs:element ref="HelloVerifyRequest"/>
                  <xs:element ref="DHClientKeyExchange"/>
                  <xs:element ref="DHEClientKeyExchange"/>
                  <xs:element ref="ECDHClientKeyExchange"/>
                  <xs:element ref="ECDHEServerKeyExchange"/>
                  <xs:element ref="PskClientKeyExchange"/>
                  <xs:element ref="Finished"/>
                  <xs:element ref="RSAClientKeyExchange"/>
                  <xs:element ref="GOSTClientKeyExchange"/>
                  <xs:element ref="ServerHelloDone"/>
                  <xs:element ref="ServerHello"/>
                  <xs:element ref="Alert"/>
                  <xs:element ref="NewSessionTicket"/>
                  <xs:element ref="KeyUpdate"/>
                  <xs:element ref="Application"/>
                  <xs:element ref="ChangeCipherSpec"/>
                  <xs:element ref="SSL2ClientHello"/>
                  <xs:element ref="SSL2ClientMasterKey"/>
                  <xs:element ref="SSL2ServerHello"/>
                  <xs:element ref="SSL2ServerVerify"/>
                  <xs:element ref="UnknownSSL2Message"/>
                  <xs:element ref="UnknownMessage"/>
                  <xs:element ref="UnknownHandshakeMessage"/>
                  <xs:element ref="HelloRequest"/>
                  <xs:element ref="Heartbeat"/>
                  <xs:element ref="SupplementalData"/>
                  <xs:element ref="EncryptedExtensions"/>
                  <xs:element ref="PskDhClientKeyExchange"/>
                  <xs:element ref="PskDheServerKeyExchange"/>
                  <xs:element ref="PskEcDhClientKeyExchange"/>
                  <xs:element ref="PskEcDheServerKeyExchange"/>
                  <xs:element ref="PskRsaClientKeyExchange"/>
                  <xs:element ref="SrpClientKeyExchange"/>
                  <xs:element ref="SrpServerKeyExchange"/>
                  <xs:element ref="EndOfEarlyData"/>
                  <xs:element ref="PWDServerKeyExchange"/>
                  <xs:element ref="RSAServerKeyExchange"/>
                  <xs:element ref="PWDClientKeyExchange"/>
                  <xs:element ref="PskServerKeyExchange"/>
                  <xs:element ref="CertificateStatus"/>
                  <xs:element ref="EmptyClientKeyExchange"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="receivedRecords" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Record" type="record" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="receivedFragments" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DtlsFragment" type="dtlsHandshakeMessageFragment" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="messages" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element ref="Certificate"/>
                  <xs:element ref="DtlsHandshakeMessageFragment"/>
                  <xs:element ref="CertificateVerify"/>
                  <xs:element ref="CertificateRequest"/>
                  <xs:element ref="ClientHello"/>
                  <xs:element ref="HelloVerifyRequest"/>
                  <xs:element ref="DHClientKeyExchange"/>
                  <xs:element ref="DHEClientKeyExchange"/>
                  <xs:element ref="ECDHClientKeyExchange"/>
                  <xs:element ref="ECDHEServerKeyExchange"/>
                  <xs:element ref="PskClientKeyExchange"/>
                  <xs:element ref="Finished"/>
                  <xs:element ref="RSAClientKeyExchange"/>
                  <xs:element ref="GOSTClientKeyExchange"/>
                  <xs:element ref="ServerHelloDone"/>
                  <xs:element ref="ServerHello"/>
                  <xs:element ref="Alert"/>
                  <xs:element ref="NewSessionTicket"/>
                  <xs:element ref="KeyUpdate"/>
                  <xs:element ref="Application"/>
                  <xs:element ref="ChangeCipherSpec"/>
                  <xs:element ref="SSL2ClientHello"/>
                  <xs:element ref="SSL2ClientMasterKey"/>
                  <xs:element ref="SSL2ServerHello"/>
                  <xs:element ref="SSL2ServerVerify"/>
                  <xs:element ref="UnknownSSL2Message"/>
                  <xs:element ref="UnknownMessage"/>
                  <xs:element ref="UnknownHandshakeMessage"/>
                  <xs:element ref="HelloRequest"/>
                  <xs:element ref="Heartbeat"/>
                  <xs:element ref="SupplementalData"/>
                  <xs:element ref="EncryptedExtensions"/>
                  <xs:element ref="PskDhClientKeyExchange"/>
                  <xs:element ref="PskDheServerKeyExchange"/>
                  <xs:element ref="PskEcDhClientKeyExchange"/>
                  <xs:element ref="PskEcDheServerKeyExchange"/>
                  <xs:element ref="PskRsaClientKeyExchange"/>
                  <xs:element ref="SrpClientKeyExchange"/>
                  <xs:element ref="SrpServerKeyExchange"/>
                  <xs:element ref="EndOfEarlyData"/>
                  <xs:element ref="PWDServerKeyExchange"/>
                  <xs:element ref="RSAServerKeyExchange"/>
                  <xs:element ref="PWDClientKeyExchange"/>
                  <xs:element ref="PskServerKeyExchange"/>
                  <xs:element ref="CertificateStatus"/>
                  <xs:element ref="EmptyClientKeyExchange"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="records" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Record" type="record" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="fragments" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DtlsFragment" type="dtlsHandshakeMessageFragment" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="sendMessages" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element ref="Certificate"/>
                  <xs:element ref="DtlsHandshakeMessageFragment"/>
                  <xs:element ref="CertificateVerify"/>
                  <xs:element ref="CertificateRequest"/>
                  <xs:element ref="ClientHello"/>
                  <xs:element ref="HelloVerifyRequest"/>
                  <xs:element ref="DHClientKeyExchange"/>
                  <xs:element ref="DHEClientKeyExchange"/>
                  <xs:element ref="ECDHClientKeyExchange"/>
                  <xs:element ref="ECDHEServerKeyExchange"/>
                  <xs:element ref="PskClientKeyExchange"/>
                  <xs:element ref="Finished"/>
                  <xs:element ref="RSAClientKeyExchange"/>
                  <xs:element ref="GOSTClientKeyExchange"/>
                  <xs:element ref="ServerHelloDone"/>
                  <xs:element ref="ServerHello"/>
                  <xs:element ref="Alert"/>
                  <xs:element ref="NewSessionTicket"/>
                  <xs:element ref="KeyUpdate"/>
                  <xs:element ref="Application"/>
                  <xs:element ref="ChangeCipherSpec"/>
                  <xs:element ref="SSL2ClientHello"/>
                  <xs:element ref="SSL2ClientMasterKey"/>
                  <xs:element ref="SSL2ServerHello"/>
                  <xs:element ref="SSL2ServerVerify"/>
                  <xs:element ref="UnknownSSL2Message"/>
                  <xs:element ref="UnknownMessage"/>
                  <xs:element ref="UnknownHandshakeMessage"/>
                  <xs:element ref="HelloRequest"/>
                  <xs:element ref="Heartbeat"/>
                  <xs:element ref="SupplementalData"/>
                  <xs:element ref="EncryptedExtensions"/>
                  <xs:element ref="PskDhClientKeyExchange"/>
                  <xs:element ref="PskDheServerKeyExchange"/>
                  <xs:element ref="PskEcDhClientKeyExchange"/>
                  <xs:element ref="PskEcDheServerKeyExchange"/>
                  <xs:element ref="PskRsaClientKeyExchange"/>
                  <xs:element ref="SrpClientKeyExchange"/>
                  <xs:element ref="SrpServerKeyExchange"/>
                  <xs:element ref="EndOfEarlyData"/>
                  <xs:element ref="PWDServerKeyExchange"/>
                  <xs:element ref="RSAServerKeyExchange"/>
                  <xs:element ref="PWDClientKeyExchange"/>
                  <xs:element ref="PskServerKeyExchange"/>
                  <xs:element ref="CertificateStatus"/>
                  <xs:element ref="EmptyClientKeyExchange"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="sendRecords" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Record" type="record" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="sendFragments" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DtlsFragment" type="dtlsHandshakeMessageFragment" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="forwardMessagesWithPrepareAction">
    <xs:complexContent>
      <xs:extension base="forwardMessagesAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="forwardDataAction">
    <xs:complexContent>
      <xs:extension base="tlsAction">
        <xs:sequence>
          <xs:element name="from" type="xs:string" minOccurs="0"/>
          <xs:element name="to" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="receiveTillAction">
    <xs:complexContent>
      <xs:extension base="commonReceiveAction">
        <xs:choice>
          <xs:element ref="Certificate"/>
          <xs:element ref="DtlsHandshakeMessageFragment"/>
          <xs:element ref="CertificateVerify"/>
          <xs:element ref="CertificateRequest"/>
          <xs:element ref="ClientHello"/>
          <xs:element ref="HelloVerifyRequest"/>
          <xs:element ref="DHClientKeyExchange"/>
          <xs:element ref="DHEClientKeyExchange"/>
          <xs:element ref="ECDHClientKeyExchange"/>
          <xs:element ref="ECDHEServerKeyExchange"/>
          <xs:element ref="PskClientKeyExchange"/>
          <xs:element ref="Finished"/>
          <xs:element ref="RSAClientKeyExchange"/>
          <xs:element ref="GOSTClientKeyExchange"/>
          <xs:element ref="ServerHelloDone"/>
          <xs:element ref="ServerHello"/>
          <xs:element ref="Alert"/>
          <xs:element ref="NewSessionTicket"/>
          <xs:element ref="KeyUpdate"/>
          <xs:element ref="Application"/>
          <xs:element ref="ChangeCipherSpec"/>
          <xs:element ref="SSL2ClientHello"/>
          <xs:element ref="SSL2ClientMasterKey"/>
          <xs:element ref="SSL2ServerHello"/>
          <xs:element ref="SSL2ServerVerify"/>
          <xs:element ref="UnknownSSL2Message"/>
          <xs:element ref="UnknownMessage"/>
          <xs:element ref="UnknownHandshakeMessage"/>
          <xs:element ref="HelloRequest"/>
          <xs:element ref="Heartbeat"/>
          <xs:element ref="SupplementalData"/>
          <xs:element ref="EncryptedExtensions"/>
          <xs:element ref="PskDhClientKeyExchange"/>
          <xs:element ref="PskDheServerKeyExchange"/>
          <xs:element ref="PskEcDhClientKeyExchange"/>
          <xs:element ref="PskEcDheServerKeyExchange"/>
          <xs:element ref="PskRsaClientKeyExchange"/>
          <xs:element ref="SrpClientKeyExchange"/>
          <xs:element ref="SrpServerKeyExchange"/>
          <xs:element ref="EndOfEarlyData"/>
          <xs:element ref="PWDServerKeyExchange"/>
          <xs:element ref="RSAServerKeyExchange"/>
          <xs:element ref="PWDClientKeyExchange"/>
          <xs:element ref="PskServerKeyExchange"/>
          <xs:element ref="CertificateStatus"/>
          <xs:element ref="EmptyClientKeyExchange"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="commonReceiveAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="tightReceiveAction">
    <xs:complexContent>
      <xs:extension base="receiveAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="receiveAction">
    <xs:complexContent>
      <xs:extension base="commonReceiveAction">
        <xs:sequence>
          <xs:element name="expectedMessages" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element ref="Certificate"/>
                  <xs:element ref="DtlsHandshakeMessageFragment"/>
                  <xs:element ref="CertificateVerify"/>
                  <xs:element ref="CertificateRequest"/>
                  <xs:element ref="ClientHello"/>
                  <xs:element ref="HelloVerifyRequest"/>
                  <xs:element ref="DHClientKeyExchange"/>
                  <xs:element ref="DHEClientKeyExchange"/>
                  <xs:element ref="ECDHClientKeyExchange"/>
                  <xs:element ref="ECDHEServerKeyExchange"/>
                  <xs:element ref="PskClientKeyExchange"/>
                  <xs:element ref="Finished"/>
                  <xs:element ref="RSAClientKeyExchange"/>
                  <xs:element ref="GOSTClientKeyExchange"/>
                  <xs:element ref="ServerHelloDone"/>
                  <xs:element ref="ServerHello"/>
                  <xs:element ref="Alert"/>
                  <xs:element ref="NewSessionTicket"/>
                  <xs:element ref="KeyUpdate"/>
                  <xs:element ref="Application"/>
                  <xs:element ref="ChangeCipherSpec"/>
                  <xs:element ref="SSL2ClientHello"/>
                  <xs:element ref="SSL2ClientMasterKey"/>
                  <xs:element ref="SSL2ServerHello"/>
                  <xs:element ref="SSL2ServerVerify"/>
                  <xs:element ref="UnknownSSL2Message"/>
                  <xs:element ref="UnknownMessage"/>
                  <xs:element ref="UnknownHandshakeMessage"/>
                  <xs:element ref="HelloRequest"/>
                  <xs:element ref="Heartbeat"/>
                  <xs:element ref="SupplementalData"/>
                  <xs:element ref="EncryptedExtensions"/>
                  <xs:element ref="PskDhClientKeyExchange"/>
                  <xs:element ref="PskDheServerKeyExchange"/>
                  <xs:element ref="PskEcDhClientKeyExchange"/>
                  <xs:element ref="PskEcDheServerKeyExchange"/>
                  <xs:element ref="PskRsaClientKeyExchange"/>
                  <xs:element ref="SrpClientKeyExchange"/>
                  <xs:element ref="SrpServerKeyExchange"/>
                  <xs:element ref="EndOfEarlyData"/>
                  <xs:element ref="PWDServerKeyExchange"/>
                  <xs:element ref="RSAServerKeyExchange"/>
                  <xs:element ref="PWDClientKeyExchange"/>
                  <xs:element ref="PskServerKeyExchange"/>
                  <xs:element ref="CertificateStatus"/>
                  <xs:element ref="EmptyClientKeyExchange"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="expectedHttpMessages" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element ref="httpRequestMessage"/>
                  <xs:element ref="httpResponseMessage"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="multiReceiveAction">
    <xs:complexContent>
      <xs:extension base="genericReceiveAction">
        <xs:sequence>
          <xs:element name="expectedActionCandidates" type="receiveAction" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="popAndSendAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence>
          <xs:element name="index" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="popAndSendMessageAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="popAndSendRecordAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence>
          <xs:element name="asPlanned" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="popBuffersAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="popBufferedMessageAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="popBufferedRecordAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="printLastHandledApplicationDataAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="lastHandledApplicationData" type="xs:string" minOccurs="0"/>
          <xs:element name="stringEncoding" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="printProposedExtensionsAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="printSecretsAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="remBufferedChCiphersAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="suite" type="cipherSuite" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="remBufferedChExtensionsAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="type" type="extensionType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="renegotiationAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="resetLastVerifyData" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="resetRecordCipherListsAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="toRemoveEncryptor" type="xs:int"/>
          <xs:element name="toRemoveDecryptor" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="resetConnectionAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="asPlanned" type="xs:boolean" minOccurs="0"/>
          <xs:element name="resetContext" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sendAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sendDynamicClientKeyExchangeAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sendDynamicServerKeyExchangeAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sendDynamicServerCertificateAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sendRaccoonCkeAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence>
          <xs:element name="withNullByte" type="xs:boolean"/>
          <xs:element name="initialSecret" type="xs:integer" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sendMessagesFromLastFlightAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence>
          <xs:element name="depth" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sendRecordsFromLastFlightAction">
    <xs:complexContent>
      <xs:extension base="messageAction">
        <xs:sequence>
          <xs:element name="depth" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="setEncryptChangeCipherSpecConfigAction">
    <xs:complexContent>
      <xs:extension base="connectionBoundAction">
        <xs:sequence>
          <xs:element name="setting" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="waitAction">
    <xs:complexContent>
      <xs:extension base="tlsAction">
        <xs:sequence>
          <xs:element name="asPlanned" type="xs:boolean" minOccurs="0"/>
          <xs:element name="time" type="xs:long" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="flushSessionCacheAction">
    <xs:complexContent>
      <xs:extension base="tlsAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sendAsciiAction">
    <xs:complexContent>
      <xs:extension base="asciiAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asciiAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="tlsAction">
        <xs:sequence>
          <xs:element name="asciiText" type="xs:string" minOccurs="0"/>
          <xs:element name="encoding" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="receiveAsciiAction">
    <xs:complexContent>
      <xs:extension base="asciiAction">
        <xs:sequence>
          <xs:element name="receivedAsciiString" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="genericReceiveAsciiAction">
    <xs:complexContent>
      <xs:extension base="asciiAction">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="transportHandlerType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TCP"/>
      <xs:enumeration value="EAP_TLS"/>
      <xs:enumeration value="UDP"/>
      <xs:enumeration value="STREAM"/>
      <xs:enumeration value="TCP_TIMING"/>
      <xs:enumeration value="UDP_TIMING"/>
      <xs:enumeration value="UDP_PROXY"/>
      <xs:enumeration value="TCP_PROXY_TIMING"/>
      <xs:enumeration value="TCP_NO_DELAY"/>
      <xs:enumeration value="TCP_FRAGMENTATION"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="actionOption">
    <xs:restriction base="xs:string">
      <xs:enumeration value="IGNORE_UNEXPECTED_NEW_SESSION_TICKETS"/>
      <xs:enumeration value="IGNORE_UNEXPECTED_WARNINGS"/>
      <xs:enumeration value="IGNORE_UNEXPECTED_KEY_UPDATE_MESSAGES"/>
      <xs:enumeration value="IGNORE_UNEXPECTED_APP_DATA"/>
      <xs:enumeration value="IGNORE_UNEXPECTED_HTTPS_MESSAGES"/>
      <xs:enumeration value="MAY_FAIL"/>
      <xs:enumeration value="CHECK_ONLY_EXPECTED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="esniMessageType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLIENT"/>
      <xs:enumeration value="SERVER"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="namedGroup">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECT163K1"/>
      <xs:enumeration value="SECT163R1"/>
      <xs:enumeration value="SECT163R2"/>
      <xs:enumeration value="SECT193R1"/>
      <xs:enumeration value="SECT193R2"/>
      <xs:enumeration value="SECT233K1"/>
      <xs:enumeration value="SECT233R1"/>
      <xs:enumeration value="SECT239K1"/>
      <xs:enumeration value="SECT283K1"/>
      <xs:enumeration value="SECT283R1"/>
      <xs:enumeration value="SECT409K1"/>
      <xs:enumeration value="SECT409R1"/>
      <xs:enumeration value="SECT571K1"/>
      <xs:enumeration value="SECT571R1"/>
      <xs:enumeration value="SECP160K1"/>
      <xs:enumeration value="SECP160R1"/>
      <xs:enumeration value="SECP160R2"/>
      <xs:enumeration value="SECP192K1"/>
      <xs:enumeration value="SECP192R1"/>
      <xs:enumeration value="SECP224K1"/>
      <xs:enumeration value="SECP224R1"/>
      <xs:enumeration value="SECP256K1"/>
      <xs:enumeration value="SECP256R1"/>
      <xs:enumeration value="SECP384R1"/>
      <xs:enumeration value="SECP521R1"/>
      <xs:enumeration value="BRAINPOOLP256R1"/>
      <xs:enumeration value="BRAINPOOLP384R1"/>
      <xs:enumeration value="BRAINPOOLP512R1"/>
      <xs:enumeration value="ECDH_X25519"/>
      <xs:enumeration value="ECDH_X448"/>
      <xs:enumeration value="FFDHE2048"/>
      <xs:enumeration value="FFDHE3072"/>
      <xs:enumeration value="FFDHE4096"/>
      <xs:enumeration value="FFDHE6144"/>
      <xs:enumeration value="FFDHE8192"/>
      <xs:enumeration value="EXPLICIT_PRIME"/>
      <xs:enumeration value="EXPLICIT_CHAR2"/>
      <xs:enumeration value="GREASE_00"/>
      <xs:enumeration value="GREASE_01"/>
      <xs:enumeration value="GREASE_02"/>
      <xs:enumeration value="GREASE_03"/>
      <xs:enumeration value="GREASE_04"/>
      <xs:enumeration value="GREASE_05"/>
      <xs:enumeration value="GREASE_06"/>
      <xs:enumeration value="GREASE_07"/>
      <xs:enumeration value="GREASE_08"/>
      <xs:enumeration value="GREASE_09"/>
      <xs:enumeration value="GREASE_10"/>
      <xs:enumeration value="GREASE_11"/>
      <xs:enumeration value="GREASE_12"/>
      <xs:enumeration value="GREASE_13"/>
      <xs:enumeration value="GREASE_14"/>
      <xs:enumeration value="GREASE_15"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="heartbeatMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PEER_ALLOWED_TO_SEND"/>
      <xs:enumeration value="PEER_NOT_ALLOWED_TO_SEND"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cipherSuite">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TLS_NULL_WITH_NULL_NULL"/>
      <xs:enumeration value="TLS_RSA_WITH_NULL_MD5"/>
      <xs:enumeration value="TLS_RSA_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_RSA_EXPORT_WITH_RC4_40_MD5"/>
      <xs:enumeration value="TLS_RSA_WITH_RC4_128_MD5"/>
      <xs:enumeration value="TLS_RSA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5"/>
      <xs:enumeration value="TLS_RSA_WITH_IDEA_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_EXPORT_WITH_DES40_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_anon_EXPORT_WITH_RC4_40_MD5"/>
      <xs:enumeration value="TLS_DH_anon_WITH_RC4_128_MD5"/>
      <xs:enumeration value="TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_anon_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_anon_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="SSL_FORTEZZA_KEA_WITH_NULL_SHA"/>
      <xs:enumeration value="SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA"/>
      <xs:enumeration value="TLS_KRB5_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_KRB5_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_KRB5_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_KRB5_WITH_IDEA_CBC_SHA"/>
      <xs:enumeration value="TLS_KRB5_WITH_DES_CBC_MD5"/>
      <xs:enumeration value="TLS_KRB5_WITH_3DES_EDE_CBC_MD5"/>
      <xs:enumeration value="TLS_KRB5_WITH_RC4_128_MD5"/>
      <xs:enumeration value="TLS_KRB5_WITH_IDEA_CBC_MD5"/>
      <xs:enumeration value="TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA"/>
      <xs:enumeration value="TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA"/>
      <xs:enumeration value="TLS_KRB5_EXPORT_WITH_RC4_40_SHA"/>
      <xs:enumeration value="TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5"/>
      <xs:enumeration value="TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5"/>
      <xs:enumeration value="TLS_KRB5_EXPORT_WITH_RC4_40_MD5"/>
      <xs:enumeration value="TLS_PSK_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_anon_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_anon_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_WITH_NULL_SHA256"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_RSA_WITH_CAMELLIA_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_ECDSA_WITH_NULL_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_ECDSA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_ECDSA_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_ECNRA_WITH_NULL_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_ECNRA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_ECNRA_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_ECNRA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECMQV_ECDSA_WITH_NULL_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECMQV_ECDSA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECMQV_ECDSA_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECMQV_ECDSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECMQV_ECNRA_WITH_NULL_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECMQV_ECNRA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECMQV_ECNRA_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECMQV_ECNRA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_anon_WITH_NULL_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_anon_WITH_RC4_128_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_anon_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_anon_EXPORT_WITH_DES40_CBC_SHA"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDH_anon_EXPORT_WITH_RC4_40_SHA"/>
      <xs:enumeration value="TLS_RSA_EXPORT1024_WITH_RC4_56_MD5"/>
      <xs:enumeration value="TLS_RSA_EXPORT1024_WITH_RC2_56_MD5"/>
      <xs:enumeration value="TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_EXPORT1024_WITH_RC4_56_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_AES_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_AES_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_anon_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_anon_WITH_AES_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_GOSTR341094_WITH_28147_CNT_IMIT"/>
      <xs:enumeration value="TLS_GOSTR341001_WITH_28147_CNT_IMIT"/>
      <xs:enumeration value="TLS_GOSTR341094_WITH_NULL_GOSTR3411"/>
      <xs:enumeration value="TLS_GOSTR341001_WITH_NULL_GOSTR3411"/>
      <xs:enumeration value="TLS_RSA_WITH_CAMELLIA_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA"/>
      <xs:enumeration value="TLS_PSK_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_PSK_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_WITH_SEED_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_SEED_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_SEED_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_SEED_CBC_SHA"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_SEED_CBC_SHA"/>
      <xs:enumeration value="TLS_DH_anon_WITH_SEED_CBC_SHA"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_anon_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_anon_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_PSK_WITH_NULL_SHA256"/>
      <xs:enumeration value="TLS_PSK_WITH_NULL_SHA384"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_AES_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_NULL_SHA256"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_NULL_SHA384"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_AES_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_NULL_SHA256"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_NULL_SHA384"/>
      <xs:enumeration value="TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256"/>
      <xs:enumeration value="TLS_EMPTY_RENEGOTIATION_INFO_SCSV"/>
      <xs:enumeration value="TLS_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_AES_128_CCM_SHA256"/>
      <xs:enumeration value="TLS_AES_128_CCM_8_SHA256"/>
      <xs:enumeration value="TLS_FALLBACK_SCSV"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDH_anon_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_ECDH_anon_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDH_anon_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDH_anon_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_RC4_128_SHA"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_NULL_SHA"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_NULL_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_NULL_SHA384"/>
      <xs:enumeration value="TLS_RSA_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_RSA_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_DH_anon_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DH_anon_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_RSA_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_RSA_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_anon_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_anon_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_PSK_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_PSK_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_PSK_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_PSK_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_128_CCM"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_256_CCM"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_128_CCM"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_256_CCM"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_128_CCM_8"/>
      <xs:enumeration value="TLS_RSA_WITH_AES_256_CCM_8"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_128_CCM_8"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_AES_256_CCM_8"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_128_CCM"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_256_CCM"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_AES_128_CCM"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_AES_256_CCM"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_128_CCM_8"/>
      <xs:enumeration value="TLS_PSK_WITH_AES_256_CCM_8"/>
      <xs:enumeration value="TLS_PSK_DHE_WITH_AES_128_CCM_8"/>
      <xs:enumeration value="TLS_PSK_DHE_WITH_AES_256_CCM_8"/>
      <xs:enumeration value="TLS_PSK_DHE_WITH_AES_256_CCM_80"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_128_CCM"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_256_CCM"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8"/>
      <xs:enumeration value="TLS_ECCPWD_WITH_AES_128_GCM_SHA256"/>
      <xs:enumeration value="TLS_ECCPWD_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_ECCPWD_WITH_AES_128_CCM_SHA256"/>
      <xs:enumeration value="TLS_ECCPWD_WITH_AES_256_CCM_SHA384"/>
      <xs:enumeration value="UNOFFICIAL_TLS_RSA_WITH_CHACHA20_POLY1305"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="UNOFFICIAL_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="UNOFFICIAL_TLS_DHE_PSK_WITH_CHACHA20_POLY1305_OLD"/>
      <xs:enumeration value="UNOFFICIAL_TLS_PSK_WITH_CHACHA20_POLY1305_OLD"/>
      <xs:enumeration value="UNOFFICIAL_TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_OLD"/>
      <xs:enumeration value="UNOFFICIAL_TLS_RSA_PSK_WITH_CHACHA20_POLY1305_OLD"/>
      <xs:enumeration value="TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_PSK_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_CECPQ1_RSA_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_CECPQ1_ECDSA_WITH_CHACHA20_POLY1305_SHA256"/>
      <xs:enumeration value="TLS_CECPQ1_RSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_CECPQ1_ECDSA_WITH_AES_256_GCM_SHA384"/>
      <xs:enumeration value="TLS_RSA_WITH_RABBIT_CBC_SHA"/>
      <xs:enumeration value="GREASE_00"/>
      <xs:enumeration value="GREASE_01"/>
      <xs:enumeration value="GREASE_02"/>
      <xs:enumeration value="GREASE_03"/>
      <xs:enumeration value="GREASE_04"/>
      <xs:enumeration value="GREASE_05"/>
      <xs:enumeration value="GREASE_06"/>
      <xs:enumeration value="GREASE_07"/>
      <xs:enumeration value="GREASE_08"/>
      <xs:enumeration value="GREASE_09"/>
      <xs:enumeration value="GREASE_10"/>
      <xs:enumeration value="GREASE_11"/>
      <xs:enumeration value="GREASE_12"/>
      <xs:enumeration value="GREASE_13"/>
      <xs:enumeration value="GREASE_14"/>
      <xs:enumeration value="GREASE_15"/>
      <xs:enumeration value="TLS_GOSTR341112_256_WITH_28147_CNT_IMIT"/>
      <xs:enumeration value="TLS_GOSTR341112_256_WITH_NULL_GOSTR3411"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="handshakeMessageType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="HELLO_REQUEST"/>
      <xs:enumeration value="CLIENT_HELLO"/>
      <xs:enumeration value="SERVER_HELLO"/>
      <xs:enumeration value="HELLO_VERIFY_REQUEST"/>
      <xs:enumeration value="NEW_SESSION_TICKET"/>
      <xs:enumeration value="END_OF_EARLY_DATA"/>
      <xs:enumeration value="ENCRYPTED_EXTENSIONS"/>
      <xs:enumeration value="CERTIFICATE"/>
      <xs:enumeration value="SERVER_KEY_EXCHANGE"/>
      <xs:enumeration value="CERTIFICATE_REQUEST"/>
      <xs:enumeration value="SERVER_HELLO_DONE"/>
      <xs:enumeration value="CERTIFICATE_VERIFY"/>
      <xs:enumeration value="CLIENT_KEY_EXCHANGE"/>
      <xs:enumeration value="FINISHED"/>
      <xs:enumeration value="KEY_UPDATE"/>
      <xs:enumeration value="CERTIFICATE_STATUS"/>
      <xs:enumeration value="SUPPLEMENTAL_DATA"/>
      <xs:enumeration value="MESSAGE_HASH"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="protocolMessageType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNKNOWN"/>
      <xs:enumeration value="CHANGE_CIPHER_SPEC"/>
      <xs:enumeration value="ALERT"/>
      <xs:enumeration value="HANDSHAKE"/>
      <xs:enumeration value="APPLICATION_DATA"/>
      <xs:enumeration value="HEARTBEAT"/>
      <xs:enumeration value="TLS12_CID"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="tls13KeySetType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NONE"/>
      <xs:enumeration value="EARLY_TRAFFIC_SECRETS"/>
      <xs:enumeration value="HANDSHAKE_TRAFFIC_SECRETS"/>
      <xs:enumeration value="APPLICATION_TRAFFIC_SECRETS"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="compressionMethod">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NULL"/>
      <xs:enumeration value="DEFLATE"/>
      <xs:enumeration value="LZS"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="pskKeyExchangeMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PSK_KE"/>
      <xs:enumeration value="PSK_DHE_KE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ssl2CipherSuite">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SSL_CK_RC4_128_WITH_MD5"/>
      <xs:enumeration value="SSL_CK_RC4_128_EXPORT40_WITH_MD5"/>
      <xs:enumeration value="SSL_CK_RC2_128_CBC_WITH_MD5"/>
      <xs:enumeration value="SSL_CK_RC2_128_CBC_EXPORT40_WITH_MD5"/>
      <xs:enumeration value="SSL_CK_IDEA_128_CBC_WITH_MD5"/>
      <xs:enumeration value="SSL_CK_DES_64_CBC_WITH_MD5"/>
      <xs:enumeration value="SSL_CK_DES_192_EDE3_CBC_WITH_MD5"/>
      <xs:enumeration value="SSL_UNKNOWN_CIPHER"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="protocolVersion">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SSL2"/>
      <xs:enumeration value="SSL3"/>
      <xs:enumeration value="TLS10"/>
      <xs:enumeration value="TLS11"/>
      <xs:enumeration value="TLS12"/>
      <xs:enumeration value="TLS13"/>
      <xs:enumeration value="TLS13_DRAFT14"/>
      <xs:enumeration value="TLS13_DRAFT15"/>
      <xs:enumeration value="TLS13_DRAFT16"/>
      <xs:enumeration value="TLS13_DRAFT17"/>
      <xs:enumeration value="TLS13_DRAFT18"/>
      <xs:enumeration value="TLS13_DRAFT19"/>
      <xs:enumeration value="TLS13_DRAFT20"/>
      <xs:enumeration value="TLS13_DRAFT21"/>
      <xs:enumeration value="TLS13_DRAFT22"/>
      <xs:enumeration value="TLS13_DRAFT23"/>
      <xs:enumeration value="TLS13_DRAFT24"/>
      <xs:enumeration value="TLS13_DRAFT25"/>
      <xs:enumeration value="TLS13_DRAFT26"/>
      <xs:enumeration value="TLS13_DRAFT27"/>
      <xs:enumeration value="TLS13_DRAFT28"/>
      <xs:enumeration value="DTLS10_DRAFT"/>
      <xs:enumeration value="DTLS10"/>
      <xs:enumeration value="DTLS12"/>
      <xs:enumeration value="GREASE_00"/>
      <xs:enumeration value="GREASE_01"/>
      <xs:enumeration value="GREASE_02"/>
      <xs:enumeration value="GREASE_03"/>
      <xs:enumeration value="GREASE_04"/>
      <xs:enumeration value="GREASE_05"/>
      <xs:enumeration value="GREASE_06"/>
      <xs:enumeration value="GREASE_07"/>
      <xs:enumeration value="GREASE_08"/>
      <xs:enumeration value="GREASE_09"/>
      <xs:enumeration value="GREASE_10"/>
      <xs:enumeration value="GREASE_11"/>
      <xs:enumeration value="GREASE_12"/>
      <xs:enumeration value="GREASE_13"/>
      <xs:enumeration value="GREASE_14"/>
      <xs:enumeration value="GREASE_15"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="signatureAndHashAlgorithm">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ANONYMOUS_NONE"/>
      <xs:enumeration value="ANONYMOUS_MD5"/>
      <xs:enumeration value="ANONYMOUS_SHA1"/>
      <xs:enumeration value="ANONYMOUS_SHA224"/>
      <xs:enumeration value="ANONYMOUS_SHA256"/>
      <xs:enumeration value="ANONYMOUS_SHA384"/>
      <xs:enumeration value="ANONYMOUS_SHA512"/>
      <xs:enumeration value="RSA_NONE"/>
      <xs:enumeration value="RSA_MD5"/>
      <xs:enumeration value="RSA_SHA1"/>
      <xs:enumeration value="RSA_SHA224"/>
      <xs:enumeration value="RSA_SHA256"/>
      <xs:enumeration value="RSA_SHA384"/>
      <xs:enumeration value="RSA_SHA512"/>
      <xs:enumeration value="DSA_NONE"/>
      <xs:enumeration value="DSA_MD5"/>
      <xs:enumeration value="DSA_SHA1"/>
      <xs:enumeration value="DSA_SHA224"/>
      <xs:enumeration value="DSA_SHA256"/>
      <xs:enumeration value="DSA_SHA384"/>
      <xs:enumeration value="DSA_SHA512"/>
      <xs:enumeration value="ECDSA_NONE"/>
      <xs:enumeration value="ECDSA_MD5"/>
      <xs:enumeration value="ECDSA_SHA1"/>
      <xs:enumeration value="ECDSA_SHA224"/>
      <xs:enumeration value="ECDSA_SHA256"/>
      <xs:enumeration value="ECDSA_SHA384"/>
      <xs:enumeration value="ECDSA_SHA512"/>
      <xs:enumeration value="ED25519"/>
      <xs:enumeration value="ED448"/>
      <xs:enumeration value="RSA_PSS_RSAE_SHA256"/>
      <xs:enumeration value="RSA_PSS_RSAE_SHA384"/>
      <xs:enumeration value="RSA_PSS_RSAE_SHA512"/>
      <xs:enumeration value="RSA_PSS_PSS_SHA256"/>
      <xs:enumeration value="RSA_PSS_PSS_SHA384"/>
      <xs:enumeration value="RSA_PSS_PSS_SHA512"/>
      <xs:enumeration value="GOSTR34102001_GOSTR3411"/>
      <xs:enumeration value="GOSTR34102012_256_GOSTR34112012_256"/>
      <xs:enumeration value="GOSTR34102012_512_GOSTR34112012_512"/>
      <xs:enumeration value="GREASE_00"/>
      <xs:enumeration value="GREASE_01"/>
      <xs:enumeration value="GREASE_02"/>
      <xs:enumeration value="GREASE_03"/>
      <xs:enumeration value="GREASE_04"/>
      <xs:enumeration value="GREASE_05"/>
      <xs:enumeration value="GREASE_06"/>
      <xs:enumeration value="GREASE_07"/>
      <xs:enumeration value="GREASE_08"/>
      <xs:enumeration value="GREASE_09"/>
      <xs:enumeration value="GREASE_10"/>
      <xs:enumeration value="GREASE_11"/>
      <xs:enumeration value="GREASE_12"/>
      <xs:enumeration value="GREASE_13"/>
      <xs:enumeration value="GREASE_14"/>
      <xs:enumeration value="GREASE_15"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="certificateType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="X509"/>
      <xs:enumeration value="OPEN_PGP"/>
      <xs:enumeration value="RAW_PUBLIC_KEY"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="certificateStatusRequestType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="OCSP"/>
      <xs:enumeration value="OCSP_multi"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="srtpProtectionProfiles">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SRTP_AES128_CM_HMAC_SHA1_80"/>
      <xs:enumeration value="SRTP_AES128_CM_HMAC_SHA1_32"/>
      <xs:enumeration value="SRTP_NULL_HMAC_SHA1_80"/>
      <xs:enumeration value="SRTP_NULL_HMAC_SHA1_32"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="userMappingExtensionHintType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UPN_DOMAIN_HINT"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="authzDataFormat">
    <xs:restriction base="xs:string">
      <xs:enumeration value="X509_ATTR_CERT"/>
      <xs:enumeration value="SAML_ASSERTION"/>
      <xs:enumeration value="X509_ATTR_CERT_URL"/>
      <xs:enumeration value="SAML_ASSERTION_URL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ecPointFormat">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNCOMPRESSED"/>
      <xs:enumeration value="ANSIX962_COMPRESSED_PRIME"/>
      <xs:enumeration value="ANSIX962_COMPRESSED_CHAR2"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="clientCertificateType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RSA_SIGN"/>
      <xs:enumeration value="DSS_SIGN"/>
      <xs:enumeration value="RSA_FIXED_DH"/>
      <xs:enumeration value="DSS_FIXED_DH"/>
      <xs:enumeration value="RSA_EPHEMERAL_DH_RESERVED"/>
      <xs:enumeration value="DSS_EPHEMERAL_DH_RESERVED"/>
      <xs:enumeration value="FORTEZZA_DMS_RESERVED"/>
      <xs:enumeration value="GOSTR34101994"/>
      <xs:enumeration value="GOSTR34102001"/>
      <xs:enumeration value="ECDSA_SIGN"/>
      <xs:enumeration value="RSA_FIXED_ECDH"/>
      <xs:enumeration value="ECDSA_FIXED_ECDH"/>
      <xs:enumeration value="GOST_SIGN256"/>
      <xs:enumeration value="GOST_SIGN512"/>
      <xs:enumeration value="GOSTR34102012_256"/>
      <xs:enumeration value="GOSTR34102012_512"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="nameType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HOST_NAME"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="gostCurve">
    <xs:restriction base="xs:string">
      <xs:enumeration value="GostR3410_2001_CryptoPro_A"/>
      <xs:enumeration value="GostR3410_2001_CryptoPro_B"/>
      <xs:enumeration value="GostR3410_2001_CryptoPro_C"/>
      <xs:enumeration value="GostR3410_2001_CryptoPro_XchA"/>
      <xs:enumeration value="GostR3410_2001_CryptoPro_XchB"/>
      <xs:enumeration value="Tc26_Gost_3410_12_256_paramSetA"/>
      <xs:enumeration value="Tc26_Gost_3410_12_512_paramSetA"/>
      <xs:enumeration value="Tc26_Gost_3410_12_512_paramSetB"/>
      <xs:enumeration value="Tc26_Gost_3410_12_512_paramSetC"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="tokenBindingVersion">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DRAFT_1"/>
      <xs:enumeration value="DRAFT_2"/>
      <xs:enumeration value="DRAFT_3"/>
      <xs:enumeration value="DRAFT_4"/>
      <xs:enumeration value="DRAFT_5"/>
      <xs:enumeration value="DRAFT_6"/>
      <xs:enumeration value="DRAFT_7"/>
      <xs:enumeration value="DRAFT_8"/>
      <xs:enumeration value="DRAFT_9"/>
      <xs:enumeration value="DRAFT_10"/>
      <xs:enumeration value="DRAFT_11"/>
      <xs:enumeration value="DRAFT_12"/>
      <xs:enumeration value="DRAFT_13"/>
      <xs:enumeration value="DRAFT_14"/>
      <xs:enumeration value="DRAFT_15"/>
      <xs:enumeration value="DRAFT_16"/>
      <xs:enumeration value="DRAFT_17"/>
      <xs:enumeration value="DRAFT_18"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="tokenBindingKeyParameters">
    <xs:restriction base="xs:string">
      <xs:enumeration value="RSA2048_PKCS1_5"/>
      <xs:enumeration value="RSA2048_PSS"/>
      <xs:enumeration value="ECDSAP256"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="prfAlgorithm">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TLS_PRF_LEGACY"/>
      <xs:enumeration value="TLS_PRF_SHA256"/>
      <xs:enumeration value="TLS_PRF_SHA384"/>
      <xs:enumeration value="TLS_PRF_GOSTR3411"/>
      <xs:enumeration value="TLS_PRF_GOSTR3411_2012_256"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="extensionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SERVER_NAME_INDICATION"/>
      <xs:enumeration value="MAX_FRAGMENT_LENGTH"/>
      <xs:enumeration value="CLIENT_CERTIFICATE_URL"/>
      <xs:enumeration value="TRUSTED_CA_KEYS"/>
      <xs:enumeration value="TRUNCATED_HMAC"/>
      <xs:enumeration value="STATUS_REQUEST"/>
      <xs:enumeration value="USER_MAPPING"/>
      <xs:enumeration value="CLIENT_AUTHZ"/>
      <xs:enumeration value="SERVER_AUTHZ"/>
      <xs:enumeration value="CERT_TYPE"/>
      <xs:enumeration value="ELLIPTIC_CURVES"/>
      <xs:enumeration value="EC_POINT_FORMATS"/>
      <xs:enumeration value="SRP"/>
      <xs:enumeration value="SIGNATURE_AND_HASH_ALGORITHMS"/>
      <xs:enumeration value="USE_SRTP"/>
      <xs:enumeration value="HEARTBEAT"/>
      <xs:enumeration value="ALPN"/>
      <xs:enumeration value="STATUS_REQUEST_V2"/>
      <xs:enumeration value="SIGNED_CERTIFICATE_TIMESTAMP"/>
      <xs:enumeration value="CLIENT_CERTIFICATE_TYPE"/>
      <xs:enumeration value="SERVER_CERTIFICATE_TYPE"/>
      <xs:enumeration value="PADDING"/>
      <xs:enumeration value="ENCRYPT_THEN_MAC"/>
      <xs:enumeration value="EXTENDED_MASTER_SECRET"/>
      <xs:enumeration value="TOKEN_BINDING"/>
      <xs:enumeration value="CACHED_INFO"/>
      <xs:enumeration value="RECORD_SIZE_LIMIT"/>
      <xs:enumeration value="PWD_PROTECT"/>
      <xs:enumeration value="PWD_CLEAR"/>
      <xs:enumeration value="PASSWORD_SALT"/>
      <xs:enumeration value="SESSION_TICKET"/>
      <xs:enumeration value="EXTENDED_RANDOM"/>
      <xs:enumeration value="PRE_SHARED_KEY"/>
      <xs:enumeration value="EARLY_DATA"/>
      <xs:enumeration value="SUPPORTED_VERSIONS"/>
      <xs:enumeration value="COOKIE"/>
      <xs:enumeration value="PSK_KEY_EXCHANGE_MODES"/>
      <xs:enumeration value="CERTIFICATE_AUTHORITIES"/>
      <xs:enumeration value="OID_FILTERS"/>
      <xs:enumeration value="POST_HANDSHAKE_AUTH"/>
      <xs:enumeration value="SIGNATURE_ALGORITHMS_CERT"/>
      <xs:enumeration value="KEY_SHARE"/>
      <xs:enumeration value="CONNECTION_ID"/>
      <xs:enumeration value="RENEGOTIATION_INFO"/>
      <xs:enumeration value="ENCRYPTED_SERVER_NAME_INDICATION"/>
      <xs:enumeration value="GREASE_00"/>
      <xs:enumeration value="GREASE_01"/>
      <xs:enumeration value="GREASE_02"/>
      <xs:enumeration value="GREASE_03"/>
      <xs:enumeration value="GREASE_04"/>
      <xs:enumeration value="GREASE_05"/>
      <xs:enumeration value="GREASE_06"/>
      <xs:enumeration value="GREASE_07"/>
      <xs:enumeration value="GREASE_08"/>
      <xs:enumeration value="GREASE_09"/>
      <xs:enumeration value="GREASE_10"/>
      <xs:enumeration value="GREASE_11"/>
      <xs:enumeration value="GREASE_12"/>
      <xs:enumeration value="GREASE_13"/>
      <xs:enumeration value="GREASE_14"/>
      <xs:enumeration value="GREASE_15"/>
      <xs:enumeration value="UNKNOWN"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="esniDnsKeyRecordVersion">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NULL"/>
      <xs:enumeration value="VERSION_FF01"/>
      <xs:enumeration value="VERSION_FF02"/>
      <xs:enumeration value="VERSION_FF03"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="maxFragmentLength">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TWO_9"/>
      <xs:enumeration value="TWO_10"/>
      <xs:enumeration value="TWO_11"/>
      <xs:enumeration value="TWO_12"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="layerConfiguration">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TLS"/>
      <xs:enumeration value="DTLS"/>
      <xs:enumeration value="QUIC"/>
      <xs:enumeration value="OPEN_VPN"/>
      <xs:enumeration value="STARTTLS"/>
      <xs:enumeration value="HTTPS"/>
      <xs:enumeration value="SSL2"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="certificateKeyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DH"/>
      <xs:enumeration value="ECDH"/>
      <xs:enumeration value="RSA"/>
      <xs:enumeration value="DSS"/>
      <xs:enumeration value="ECDSA"/>
      <xs:enumeration value="GOST01"/>
      <xs:enumeration value="GOST12"/>
      <xs:enumeration value="FORTEZZA"/>
      <xs:enumeration value="ECNRA"/>
      <xs:enumeration value="NONE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="hashAlgorithm">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NONE"/>
      <xs:enumeration value="MD5"/>
      <xs:enumeration value="SHA1"/>
      <xs:enumeration value="SHA224"/>
      <xs:enumeration value="SHA256"/>
      <xs:enumeration value="SHA384"/>
      <xs:enumeration value="SHA512"/>
      <xs:enumeration value="GOSTR3411"/>
      <xs:enumeration value="GOSTR34112012_256"/>
      <xs:enumeration value="GOSTR34112012_512"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="filterType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DEFAULT"/>
      <xs:enumeration value="DISCARD_RECORDS"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="runningModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLIENT"/>
      <xs:enumeration value="SERVER"/>
      <xs:enumeration value="MITM"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="keyUpdateRequest">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UPDATE_NOT_REQUESTED"/>
      <xs:enumeration value="UPDATE_REQUESTED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="workflowTraceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FULL"/>
      <xs:enumeration value="HANDSHAKE"/>
      <xs:enumeration value="DYNAMIC_HANDSHAKE"/>
      <xs:enumeration value="DYNAMIC_HELLO"/>
      <xs:enumeration value="HELLO"/>
      <xs:enumeration value="SHORT_HELLO"/>
      <xs:enumeration value="RESUMPTION"/>
      <xs:enumeration value="FULL_RESUMPTION"/>
      <xs:enumeration value="CLIENT_RENEGOTIATION_WITHOUT_RESUMPTION"/>
      <xs:enumeration value="CLIENT_RENEGOTIATION"/>
      <xs:enumeration value="SERVER_RENEGOTIATION"/>
      <xs:enumeration value="DYNAMIC_CLIENT_RENEGOTIATION_WITHOUT_RESUMPTION"/>
      <xs:enumeration value="HTTPS"/>
      <xs:enumeration value="DYNAMIC_HTTPS"/>
      <xs:enumeration value="SSL2_HELLO"/>
      <xs:enumeration value="SIMPLE_MITM_PROXY"/>
      <xs:enumeration value="SIMPLE_FORWARDING_MITM_PROXY"/>
      <xs:enumeration value="TLS13_PSK"/>
      <xs:enumeration value="FULL_TLS13_PSK"/>
      <xs:enumeration value="ZERO_RTT"/>
      <xs:enumeration value="FULL_ZERO_RTT"/>
      <xs:enumeration value="FALSE_START"/>
      <xs:enumeration value="RSA_SYNC_PROXY"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="workflowExecutorType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DEFAULT"/>
      <xs:enumeration value="THREADED_SERVER"/>
      <xs:enumeration value="DTLS"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="alertDescription">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLOSE_NOTIFY"/>
      <xs:enumeration value="UNEXPECTED_MESSAGE"/>
      <xs:enumeration value="BAD_RECORD_MAC"/>
      <xs:enumeration value="DECRYPTION_FAILED_RESERVED"/>
      <xs:enumeration value="RECORD_OVERFLOW"/>
      <xs:enumeration value="DECOMPRESSION_FAILURE"/>
      <xs:enumeration value="HANDSHAKE_FAILURE"/>
      <xs:enumeration value="NO_CERTIFICATE_RESERVED"/>
      <xs:enumeration value="BAD_CERTIFICATE"/>
      <xs:enumeration value="UNSUPPORTED_CERTIFICATE"/>
      <xs:enumeration value="CERTIFICATE_REVOKED"/>
      <xs:enumeration value="CERTIFICATE_EXPIRED"/>
      <xs:enumeration value="CERTIFICATE_UNKNOWN"/>
      <xs:enumeration value="ILLEGAL_PARAMETER"/>
      <xs:enumeration value="UNKNOWN_CA"/>
      <xs:enumeration value="ACCESS_DENIED"/>
      <xs:enumeration value="DECODE_ERROR"/>
      <xs:enumeration value="DECRYPT_ERROR"/>
      <xs:enumeration value="EXPORT_RESTRICTION_RESERVED"/>
      <xs:enumeration value="PROTOCOL_VERSION"/>
      <xs:enumeration value="INSUFFICIENT_SECURITY"/>
      <xs:enumeration value="INTERNAL_ERROR"/>
      <xs:enumeration value="INAPPROPRIATE_FALLBACK"/>
      <xs:enumeration value="USER_CANCELED"/>
      <xs:enumeration value="NO_RENEGOTIATION"/>
      <xs:enumeration value="MISSING_EXTENSION"/>
      <xs:enumeration value="UNSUPPORTED_EXTENSION"/>
      <xs:enumeration value="CERTIFICATE_UNOBTAINABLE"/>
      <xs:enumeration value="UNRECOGNIZED_NAME"/>
      <xs:enumeration value="BAD_CERTIFICATE_STATUS_RESPONSE"/>
      <xs:enumeration value="BAD_CERTIFICATE_HASH_VALUE"/>
      <xs:enumeration value="UNKNOWN_PSK_IDENTITY"/>
      <xs:enumeration value="CERTIFICATE_REQUIRED"/>
      <xs:enumeration value="NO_APPLICATION_PROTOCOL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="alertLevel">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNDEFINED"/>
      <xs:enumeration value="WARNING"/>
      <xs:enumeration value="FATAL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="tokenBindingType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PROVIDED_TOKEN_BINDING"/>
      <xs:enumeration value="REFERRED_TOKEN_BINDING"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="chooserType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DEFAULT"/>
      <xs:enumeration value="SMART_RECORD_SIZE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="starttlsType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NONE"/>
      <xs:enumeration value="FTP"/>
      <xs:enumeration value="IMAP"/>
      <xs:enumeration value="POP3"/>
      <xs:enumeration value="SMTP"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cipherAlgorithm">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NULL"/>
      <xs:enumeration value="RC2_128"/>
      <xs:enumeration value="RC4_128"/>
      <xs:enumeration value="DES_CBC"/>
      <xs:enumeration value="DES_EDE_CBC"/>
      <xs:enumeration value="AES_128_CBC"/>
      <xs:enumeration value="AES_256_CBC"/>
      <xs:enumeration value="AES_128_GCM"/>
      <xs:enumeration value="AES_256_GCM"/>
      <xs:enumeration value="CAMELLIA_128_CBC"/>
      <xs:enumeration value="CAMELLIA_256_CBC"/>
      <xs:enumeration value="CAMELLIA_128_GCM"/>
      <xs:enumeration value="CAMELLIA_256_GCM"/>
      <xs:enumeration value="IDEA_128"/>
      <xs:enumeration value="SEED_CBC"/>
      <xs:enumeration value="AES_128_CCM"/>
      <xs:enumeration value="AES_256_CCM"/>
      <xs:enumeration value="CHACHA20_POLY1305"/>
      <xs:enumeration value="UNOFFICIAL_CHACHA20_POLY1305"/>
      <xs:enumeration value="DES40_CBC"/>
      <xs:enumeration value="ARIA_128_CBC"/>
      <xs:enumeration value="ARIA_256_CBC"/>
      <xs:enumeration value="ARIA_128_GCM"/>
      <xs:enumeration value="ARIA_256_GCM"/>
      <xs:enumeration value="GOST_28147_CNT"/>
      <xs:enumeration value="FORTEZZA_CBC"/>
      <xs:enumeration value="AES_128_CTR"/>
      <xs:enumeration value="AES_256_CTR"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="macAlgorithm">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NULL"/>
      <xs:enumeration value="AEAD"/>
      <xs:enumeration value="SSLMAC_MD5"/>
      <xs:enumeration value="SSLMAC_SHA1"/>
      <xs:enumeration value="HMAC_MD5"/>
      <xs:enumeration value="HMAC_SHA1"/>
      <xs:enumeration value="HMAC_SHA256"/>
      <xs:enumeration value="HMAC_SHA384"/>
      <xs:enumeration value="HMAC_SHA512"/>
      <xs:enumeration value="IMIT_GOST28147"/>
      <xs:enumeration value="HMAC_GOSTR3411"/>
      <xs:enumeration value="HMAC_GOSTR3411_2012_256"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="clientAuthenticationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ANONYMOUS"/>
      <xs:enumeration value="CERTIFICATE_BASED"/>
      <xs:enumeration value="PSK"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="socketState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLOSED"/>
      <xs:enumeration value="PEER_WRITE_CLOSED"/>
      <xs:enumeration value="UP"/>
      <xs:enumeration value="DATA_AVAILABLE"/>
      <xs:enumeration value="TIMEOUT"/>
      <xs:enumeration value="SOCKET_EXCEPTION"/>
      <xs:enumeration value="IO_EXCEPTION"/>
      <xs:enumeration value="UNAVAILABLE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="connectionEndType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CLIENT"/>
      <xs:enumeration value="SERVER"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

